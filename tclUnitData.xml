<suite name="tcl_unit">
<category name="dbCompare">
    <config>set MODEL_FILES_DIRECTORY Models</config>
    <tests>
        <test name="tcl_unit_getConnectionSetup_1.1" sequence="1" type="positive">
            <description>This tests the model connection information setup (typically the modelfile)</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="2">
                        <input name="modelInputParam">Mod$lastShortVersion</input>
                    </inputs>
                    <outputs count="2">
                        <output name="getConnectionSetup_1.1_names">ARRAY_NAME connectDisplay modDirName prd  product schemaVersion  source </output>
                        <output name="getConnectionSetup_1.1_result">ARRAY_NAME modelDef connectDisplay Mod$lastShortVersion ModDir .*Mod$lastShortVersion modDirName Mod$lastShortVersion prd CR product CareRadius schemaVersion $lastVersionDots source MODELFILES defaultTblspc -1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getConnectionSetup_1.2" sequence="1" type="positive">
            <description>This tests the target connection information setup (typically the database to be validated)</description>
                <versions>
                    <version number="03000000" condition="ge">
                        <inputs count="2">
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="modelInputParam">Mod$currentShortVersion</input>
                        </inputs>
                        <outputs count="2">
                            <output name="getConnectionSetup_1.2_names">ARRAY_NAME connectDisplay connectionString prd  product schemaVersion source</output>
                            <output name="getConnectionSetup_1.2_result">ARRAY_NAME {targetDef} connectDisplay {\$targetConnection_schemaName@\$targetConnection_server} connectionString {\$targetConnection} prd {CR} product {CareRadius} schemaVersion {$lastVersionDots} source {DATABASE}</output>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getConnectionSetup_1.1" sequence="2" type="negative">
            <description>This tests bad model connection information setup (typically the modelfile)</description>
                <versions>
                    <version number="03000000" condition="ge">
                        <inputs count="2">
                            <input name="modelInputParam">Mod9999</input>
                        </inputs>
                        <outputs count="2">
                            <output name="getConnectionSetup_1.1_names">negative</output>
                            <output name="getConnectionSetup_1.1_result">ERROR:.*Mod999*</output>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getConnectionSetup_1.2" sequence="2" type="negative">
            <description>This tests bad target connection information setup (typically the database to be validated)</description>
                <versions>
                    <version number="03000000" condition="ge">
                        <inputs count="2">
                            <input name="modelInputParam">Mod$currentShortVersion</input>
                            <input name="targetConnection">badUSERNAME/badPASSWORD@db09</input>
                        </inputs>
                        <outputs count="2">
                            <output name="getConnectionSetup_1.2_names">negative</output>
                            <output name="getConnectionSetup_1.2_result">invalid username/password</output>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMetaDataSource" sequence="1" type="positive">
            <description>This tests the meta data source selected based on the greatest common denomitor</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="3">
                        <input name="modelInputParam">Mod$currentShortVersion</input>
                        <!-- <input name="targetInputParam">UNIT_CR1618/UNIT_CR1618@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="7">
                        <output name="getMetaDataSource_result_1">MODELFILES</output>
                        <output name="getMetaDataSource_result_2">.*Mod$currentShortVersion</output>
                        <output name="getMetaDataSource_result_3">MODELFILES</output>
                        <output name="getMetaDataSource_result_4">.*Mod$currentShortVersion</output>
                        <output name="getMetaDataSource_result_5">ARRAY_NAME {modelDef} connectDisplay {Mod$currentShortVersion} metaSource {MODELFILES} ModDir {.*Mod$currentShortVersion} modDirName {Mod$currentShortVersion} prd {CR} product {} schemaVersion {$lastVersionDots} source {MODELFILES}</output>
                        <output name="getMetaDataSource_result_6">ARRAY_NAME {targetDef} connectDisplay {\$targetConnection_schemaName@\$targetConnection_server} connectionString {\$targetConnection} metaSource {MODELFILES} prd {CR} product {CARERADIUS} schemaVersion {$lastVersionDots} source {DATABASE}</output>
                        <output name="getMetaDataSource_result_7">ARRAY_NAME metaSource source</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaVersionsPLSQL" sequence="1" type="positive">
            <description>Tests for correct return of version from schema</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="3">
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="1">
                        <output name="schemaVersion">$lastVersionDots</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getProductPrefix" sequence="1" type="positive">
            <description>Unit test for proc getProductPrefix</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <input name="productName1">CARERADIUS</input>
                        <input name="productName2">careradius</input>
                    </inputs>
                    <outputs count="1">
                        <output name="productCode1">CR</output>
                        <output name="productCode2">CR</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getDisplayConnection" sequence="1" type="positive">
            <description>Unit test for proc getDisplayConnection</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="2">
                        <!-- <input name="targetConnection">UNIT_CR2430/UNIT_CR2430@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="1">
                        <!-- <output name="DisplayConnection">UNIT_CR2430@cic-svr-db08-orcl</output> -->
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaProductPLSQL" sequence="1" type="positive">
            <description>Unit test for proc getSchemaProductPLSQL</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <!-- <input name="targetConnection">UNIT_CR2430/UNIT_CR2430@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="1">
                        <output name="productName">CARERADIUS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getArrayDatumAt" sequence="1" type="positive">
            <description>Unit test for proc p_getArrayDatumAt</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <outputs count="1">
                        <output name="temp">AUP_DESC DOMAIN CTXSYS.CONTEXT {SYNC (ON COMMIT) stoplist CTXSYS.EMPTY_STOPLIST STORAGE TEXT_STORAGE}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getArrayDataFor" sequence="1" type="positive">
            <description>Unit test for proc p_getArrayDataFor</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getArrayIndexFor" sequence="1" type="positive">
            <description>Unit test for proc p_getArrayIndexFor</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="2">
                        <input name="modelList">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS AAT_ADE_APPEAL_TYPE TEST_TABLE ABF_ABNORMAL_FLAGS ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="failed">TEST_TABLE</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getArrayDatumFor" sequence="1" type="positive">
            <description>Unit test for proc p_getArrayDatumFor</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getHeader" sequence="1" type="positive">
            <description>Unit test for proc getHeader with Header tag</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="3">
                        <input name="Input_file1">$testDataDir/TestFile1_629341</input>
                        <input name="Input_file2">$testDataDir/TestFile2_629341</input>
                        <input name="Input_file3">$testDataDir/TestFile3_629341</input>
                    </inputs>
                    <outputs count="3">
                        <output name="file_output1">{DEF.TEXT_INDEXES {header TABLE_NAME OBJECT_TYPE TEXT_INDEXES}}</output>
                        <output name="file_output2"/>
                        <output name="file_output3">{DEF.TestFile3_629341 {header AUTHORIZATION_PROFILE OBJECT_TYPE TestFile3_629341}}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getModFileVer" sequence="1" type="positive">
            <description>Unit test for fetching Model Version</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <input name="Model_Files_Path">Models/Mod$currentShortVersion</input>
                    </inputs>
                    <outputs count="1">
                        <output name="Mod_Ver">$currentVersionDots</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_parseHeader" sequence="1" type="positive">
            <description> Unit test for Parsing an Headers</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="1">
                        <input name="types">USER_TABLES USER_SEQUENCES</input>
                    </inputs>
                    <outputs count="1">
                        <output name="Result">$testDataDir/Array_Input_Output.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMetaData" sequence="1" type="positive">
            <description> Unit test for getMetaData proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="3">

                        <input name="Model_Files_Path">./Models/Mod$currentShortVersion</input>
                        <input name="sourceTypes">typeproc oldproc MODELFILES</input>
                        <input name="types">USER_TABLES</input>
                    </inputs>
                    <outputs count="1">
                        <output name="Result">$testDataDir/Array_Input_Output.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_parseColumn" sequence="1" type="positive">
            <description> Unit test for parseColumn proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="4">
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$currentShortVersion</input>
                        <input name="targetConnection"/>
                        <input name="item1">VARCHAR2 {15} {} {} {4}</input>
                        <input name="item2">VARCHAR2 {} {} {} {}</input>
                    </inputs>
                    <outputs count="1">
                        <output name="Result">$testDataDir/Array_Input_Output.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_makeSqlcols" sequence="1" type="positive">
            <description> Unit test for makeSqlcols proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">2</input>
                        <input name="filetype1">USER_TABLES</input>
                        <input name="filetype2">USER_PROCEDURE</input>
                        <input name="argumentlist1">TABLE_NAME TABLESPACE_NAME</input>
                        <input name="argumentlist2">TABLE.NAME TABLESPACE.NAME</input>
                    </inputs>
                    <outputs count="1">
                        <output name="item1">USER_TABLES.TABLE_NAME USER_TABLES.TABLESPACE_NAME</output>
                        <output name="item2">TABLE.NAME TABLESPACE.NAME</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_makeSqlcols" sequence="1" type="negative">
            <description> Unit test for makeSqlcols proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="filetype1"/>
                        <input name="argumentlist1"/>
                    </inputs>
                    <outputs count="1">
                        <output name="item1"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_parseSchemaValues" sequence="1" type="positive">
            <description> Unit test for parseSchemaValues proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="3">
                        <input name="types">{USER_TABLES}</input>
                        <input name="results">{AAC_ADVERSE_ACTION_CLASS MAX2_SLA_TS}</input>
                        <input name="type_data"/>
                    </inputs>
                    <outputs count="3">
                        <output name="actual_temp(USER_TABLES.header)">AAC_ADVERSE_ACTION_CLASS</output>
                        <output name="actual_temp(USER_TABLES.key)">MAX2_SLA_TS</output>
                        <output name="actual_temp(USER_TABLES.data)"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_orderColumns" sequence="1" type="positive">
            <description>Unit test for orderColumns</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="7">
                        <input name="modelConnection">Mod$currentShortVersion</input>
                        <input name="targetConnection"/>
                        <input name="inputColumns">TAA_ATE_CODE TAA_CREATE_DATE TAA_LAST_UPDATE_DATE TAA_RECORD_VERSION TAA_TPS_CODE TAA_USR_UID_CREATED_BY</input>
                        <input name="inputDefs">{VARCHAR2 6 {} {}} {DATE 7 {} {}} {DATE 7 {} {}} {NUMBER 22 10 0} {VARCHAR2 6 {} {}} {NUMBER 22 10 0}</input>
                        <input name="inputColumns1">TAA_RECORD_VERSION TAA_TPS_CODE TAA_USR_UID_CREATED_BY TAA_ATE_CODE TAA_CREATE_DATE TAA_LAST_UPDATE_DATE</input>
                        <input name="inputDefs1">{NUMBER 22 10 0} {VARCHAR2 6 {} {}} {NUMBER 22 10 0} {VARCHAR2 6 {} {}} {DATE 7 {} {}} {DATE 7 {} {}}</input>
                        <input name="inputTable"/>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getOldModels" sequence="1" type="positive">
            <description>This tests the array update by getOldModels</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="modelInputParam">Mod2461</input>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleArray">sampleValuesMod2461</input>
                        <input name="tablesToCheck">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getModel" sequence="1" type="positive">
            <description>This tests the array update by getModel</description>
                <versions>
                    <version number="03000000" condition="gt">
                    <inputs count="5">
                        <input name="modelInputParam">Mod3100</input>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleArray">sampleValuesMod3100</input>
                        <input name="tablesToCheck">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                    <version number="03020000" condition="ge">
                    <inputs count="5">
                        <input name="modelInputParam">Mod$currentShortVersion</input>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleArray">sampleValuesMod3200</input>
                        <input name="tablesToCheck">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getDefinitions" sequence="1" type="positive">
            <description>Unit test for proc getDefinitions</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="4">
                        <input name="type"/>
                        <input name="modelInputParam">Mod2430</input>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sourceType">oldproc</input>
                        <input name="header">AAC_ADVERSE_ACTION_CLASS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="refKeyVal">keyValue_oldproc</output>
                        <output name="refDataVal">dataValue_oldproc(dataValKey)</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getDefinitions" sequence="2" type="positive">
            <description>Unit test for proc getDefinitions</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="type">MODELFILES</input>
                        <input name="modelInputParam">Mod3100</input>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sourceType">MODELFILES</input>
                        <input name="header">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="TABLES">NULL</input>
                    </inputs>
                    <outputs count="2">
                        <output name="refKeyVal">keyValue_MODELFILES</output>
                        <output name="refDataVal">dataValue_MODELFILES(dataValKey)</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_updateArrayData" sequence="1" type="positive">
            <description>Unit test for proc updateArrayData</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="ArraySample">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_queryModel" sequence="1" type="positive">
            <description>This tests the array update by queryModel</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="modelInputParam">Mod3100</input>
                        <input name="utcfile">USER_CONS_COLUMNS</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleArray">sampleValuesQueryMod3100</input>
                        <input name="tableToCheck">XOB_OBJECT</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getVersionModel" sequence="1" type="positive">
            <description>Unit test for proc getVersionModel which extracts Mod file dir corresponding to the passed version</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="totalCases">4</input>
                        <input name="modPath1">./Models</input>
                        <input name="schVer1">02.04.06.01</input>
                        <input name="modPath2">./Models</input>
                        <input name="schVer2">02.04.06.02</input>
                        <input name="modPath3"/>
                        <input name="schVer3">02.04.06.01</input>
                        <input name="modPath4">./Models</input>
                        <input name="schVer4"/>
                    </inputs>
                    <outputs count="4">
                        <output name="modDir1">Mod2461</output>
                        <output name="modDir2"/>
                        <output name="modDir3"/>
                        <output name="modDir4"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_arraytoList" sequence="1" type="positive">
            <description>Unit test for proc arraytoList</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="ArraySample">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_compareTables" sequence="1" type="negative">
            <description> Unit test for p_compareTables proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">1</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="model_header1">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="target_header1">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="model_key1">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="target_key1">MAX2_SLA_TS</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">{AAD_ADB_ADDRESS_BOOK_ADDRESS MAX2_EHA_TS}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_compareTables" sequence="2" type="negative">
            <description> Unit test for p_compareTables proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="12">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection">Mod3100</input>
                        <input name="target_header1">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="model_header1">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="target_key1">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="model_key1">MAX2_SLA_TS</input>
                        <input name="target_header2">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="model_header2">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="target_key2">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="model_key2">MAX2_SLA_TS MAX2_EHA_TS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1"/>
                        <output name="expected_Result2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_CleanString" sequence="1" type="positive">
            <description> Unit test for proc CleanString</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="no_of_scenarios">2</input>
                        <input name="sql_query1">{select  shs_version_new from    shs_schema_history   where      shs_uid =  '123'}</input>
                        <input name="sql_query2">select  \\"shs_version_new\\" from  \\t \\"shs_schema_history\\"   where   {}   \\"shs_uid\\" =  '123'}</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">SELECT SHS_VERSION_NEW FROM SHS_SCHEMA_HISTORY WHERE SHS_UID = '123'</output>
                        <output name="expected_Result2">SELECT SHS_VERSION_NEW FROM SHS_SCHEMA_HISTORY WHERE SHS_UID = '123'</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_CleanString" sequence="2" type="negative">
            <description> Unit test for proc CleanString</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="sql_query1">{ {}\ \t</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setTypes" sequence="1" type="positive">
            <description>Unit test for proc setTypes</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="type">USER_TABLES</input>
                        <input name="headersToCheck">USER_TABLES</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setOldTypes" sequence="1" type="positive">
            <description>Unit test for proc setOldTypes</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="type">USER_CONSTRAINTS</input>
                        <input name="headersToCheck">USER_CONSTRAINTS</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_dbc_getArrayIndexFor_1.1" sequence="1" type="positive">
            <description>Unit test for proc dbc_getArrayIndexFor</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="modelList">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS AAT_ADE_APPEAL_TYPE ABF_ABNORMAL_FLAGS ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_dbc_getArrayIndexFor_1.2" sequence="1" type="positive">
            <description>Unit test for proc dbc_getArrayIndexFor</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="modelList">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS AAT_ADE_APPEAL_TYPE ABF_ABNORMAL_FLAGS ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="keysList">AAC_TGRB_U_01 AAD_TGRB_U_01 AAT_TGRB_U_01 ABF_TGRB_U_01 ACA_TGRB_U_01</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_dbc_getArrayIndexFor_1.3" sequence="1" type="negative">
            <description>Unit test for proc dbc_getArrayIndexFor</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="modelList">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS AAT_ADE_APPEAL_TYPE ABF_ABNORMAL_FLAGS ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="failed">TEST_TABLE</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_addResult" sequence="1" type="positive">
            <description>This tests the proc addResult</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="inputParam">DROP.TABLES</input>
                        <input name="inputVal1">AAN_ALERT_ACTION MAX2_SHA_TS</input>
                        <input name="inputVal2">AAT_ADE_APPEAL_TYPE MAX2_SLA_TS</input>
                    </inputs>
                    <outputs count="3">
                        <output name="result1">{AAN_ALERT_ACTION MAX2_SHA_TS}</output>
                        <output name="result2">{AAN_ALERT_ACTION MAX2_SHA_TS} {AAT_ADE_APPEAL_TYPE MAX2_SLA_TS}</output>
                        <output name="result3">{AAN_ALERT_ACTION MAX2_SHA_TS} {AAT_ADE_APPEAL_TYPE MAX2_SLA_TS} {AAT_ADE_APPEAL_TYPE MAX2_SLA_TS}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getResults" sequence="1" type="positive">
            <description>This tests the proc getResults-positive cases</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="testType">POSITIVE</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleResultsArray">sampleRESULTS</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getResults" sequence="2" type="negative">
            <description>This tests the proc getResults-negative cases</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="testType">NEGATIVE</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleResultsArray">sampleRESULTS</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMinType" sequence="1" type="positive">
            <description>Unit test for proc getMinType</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="type1">USER_TRIGGERS</input>
                        <input name="type2">TEXT_INDEXES</input>
                        <input name="type3">USER_TAB_COLUMNS</input>
                        <input name="type4">USER_CONSTRAINTS</input>
                        <input name="type5">USER_IND_COLUMNS</input>
                        <input name="getMinType">positive</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="ErrorInfo"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMinType" sequence="2" type="negative">
            <description>Unit test for proc getMinType</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="type6">USER_VIEWS</input>
                        <input name="getMinType">negative</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="ErrorInfo">can't read \\"t(DEF.\$type6.data)\\": no such element in array</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findDriverFile" sequence="1" type="positive">
            <description>This tests the proc findDriverFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                    <input name="number_of_scenarios">1</input>
                        <input name="currentModDir1">Mod$lastShortVersion</input>
                        <input name="driver_File1">AutoConversion.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">AutoConversion.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMinTypeList" sequence="1" type="negative">
            <description>Unit test for proc getMinTypeList</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="getMinTypeList">negative</input>
                        <input name="type">USER_TAB_COLUMNS</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getMinTypeList" sequence="1" type="positive">
            <description>Unit test for proc getMinTypeList</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="getMinTypeList">positive</input>
                        <input name="type">USER_TAB_COLUMNS</input>
                        <input name="arrayFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareTableColumns" sequence="1" type="positive">
            <description>This tests the proc compareTableColumns</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="totalCases">3</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleModelArray1">sampleModelTabCols</input>
                        <input name="sampleTargetArray1">sampleModelTabCols</input>
                        <input name="sampleModelArray2">sampleModelTabCols</input>
                        <input name="sampleTargetArray2">sampleTargetTabCols1</input>
                        <input name="sampleModelArray3">sampleTargetTabCols1</input>
                        <input name="sampleTargetArray3">sampleModelTabCols</input>
                    </inputs>
                    <outputs count="3">
                        <output name="sampleResult1">sampleOutputTabCols1</output>
                        <output name="sampleResult2">sampleOutputTabCols2</output>
                        <output name="sampleResult3">sampleOutputTabCols3</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCurrentDriverRow" sequence="1" type="positive">
        <!-- todo this numbering etc could change -->
            <description>This tests the proc getCurrentDriverRow</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="driverFile1">AutoConversion.txt</input>
                        <input name="currentVersion1">03.02.00.00</input>
                        <input name="currentProduct1">CR</input>
                        <input name="driverFile2">AutoConversion.txt</input>
                        <input name="currentVersion2">$lastVersionDots</input>
                        <input name="currentProduct2">CR</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">CR03020000.sql 03.02.00.00 CR Mod3200</output>
                        <output name="expected_Result2">CR$lastVersion.sql $lastVersionDots CR Mod$lastShortVersion</output>
                        <output name="getCurrentDriverRow_info">positive</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCurrentDriverRow" sequence="2" type="negative">
            <description>This tests the proc getCurrentDriverRow</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="driverFile1">AutoConversion.txt</input>
                        <input name="currentVersion1">99.99.99.99</input>
                        <input name="currentProduct1"/>
                        <input name="driverFile2">AutoConversion3_Test.txt</input>
                        <input name="currentVersion2">99.99.99.99</input>
                        <input name="currentProduct2">CR</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">Could not find a line in AutoConversion.txt for 99.99.99.99.</output>
                        <output name="expected_Result2">AutoConversion3_Test.txt not found.\nCheck your spelling and try again.</output>
                        <output name="getCurrentDriverRow_info">negative</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getLogonHandle" sequence="1" type="positive">
            <description>This tests the proc getLogonHandle with a valid connection string</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <!-- <input name="connectionString">UNIT_CR2430/UNIT_CR2430@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>>
                    </inputs>
                    <outputs count="2">
                        <output name="output">oratcl0.0</output>
                        <output name="getLogOn_case">positive</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getLogonHandle" sequence="2" type="negative">
            <description>This tests the proc getLogonHandle with incorrect connection string</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="connectionString">RG/RG@db09</input>
                    </inputs>

                    <outputs count="2">
                        <output name="getLogOn_case">negative</output>
                        <output name="output">Failed to logon to.*RG@db09</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCurrentDriverRows" sequence="1" type="positive">
        <!-- todo hard coding -->
            <description>This tests the proc getCurrentDriverRows</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">1</input>
                        <input name="getCurrentDriverRows_info">positive</input>
                        <input name="driverFile1">AutoConversion.txt</input>
                        <input name="currentVersion1">$currentVersionDots</input>
                        <input name="currentProduct1">CR</input>
                        <!-- Note: though proc has optional product, it is not optional.  input name="driverFile2">AutoConversion.txt</input>
                        <input name="currentVersion2">$currentVersionDots</input>
                        <input name="currentProduct2"></input-->
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">{CR$currentVersion.sql $currentVersionDots CR Mod$currentShortVersion} {FDD.sql $currentVersionDots CR Mod$currentShortVersion}</output>
                        <!--output name="expected_Result2">{CR$currentVersion.sql $currentVersionDots CR Mod$currentShortVersion} {FDD.sql $currentVersionDots CR Mod$currentShortVersion}</output-->
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCurrentDriverRows" sequence="2" type="negative">
            <description>This tests the proc getCurrentDriverRows</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="11">
                        <input name="no_of_scenarios">3</input>
                        <input name="getCurrentDriverRows_info">negative</input>
                        <input name="driverFile1">$testDataDir/AutoConversion_getCurrentDriverRows.txt</input>
                        <input name="currentVersion1">03.01.00.00</input>
                        <input name="currentProduct1">CR</input>
                        <input name="driverFile2">$testDataDir/AutoConversion2.txt</input>
                        <input name="currentVersion2">03.01.00.00</input>
                        <input name="currentProduct2">CR</input>
                        <input name="driverFile3">$testDataDir/AutoConversion2.txt</input>
                        <input name="currentVersion3">03.04.00.00</input>
                        <input name="currentProduct3"/>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">$testDataDir/AutoConversion_getCurrentDriverRows.txt not found.\nCheck your spelling and try again.</output>
                        <output name="expected_Result2">Could not find a line in AutoConversion2.txt for 03.01.00.00.</output>
                        <output name="expected_Result3">Could not find a line in AutoConversion2.txt for 03.04.00.00.</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getLines" sequence="1" type="positive">
            <description>This tests the proc getLines</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="4">
                        <input name="filename">$testDataDir/getLines_TestData.txt</input>
                        <input name="errorFileName">NoFile.txt</input>
                        <input name="dirName">[pwd]</input>
                        <input name="dirName1">\\"\$dirName\\"</input>
                    </inputs>
                    <outputs count="4">
                        <output name="testData">{This is to test the proc getLines.} {This proc is reading lines from a text file and returns back the same data.} {} {This proc also returns the blank lines in between the content of the file but excludes the begining and the last blank line in the file.}</output>
                        <output name="getLinesException1">\$errorFileName not found.\nCheck your spelling and try again.</output>
                        <output name="getLinesException2">File \$dirName not readable: couldn't open \$dirName1: permission denied</output>
                        <output name="expStrLngth">256</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setInfo" sequence="1" type="positive">
            <description>This tests the proc setInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">2</input>
                        <input name="name1">connection_String</input>
                        <input name="value1">test</input>
                        <input name="name2">_common_utilities_loaded</input>
                        <input name="value2">false</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">test</output>
                        <output name="expected_Result2">true</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getDriverInfo" sequence="1" type="positive">
        <!-- todo version could change -->
            <description>This tests the proc getDriverInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="currentVersion">03.01.00.00</input>
                        <input name="driverFile">AutoConversion.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getInfo" sequence="1" type="positive">
            <description>This tests the proc getInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="getInfo_type">positive</input>
                        <input name="name">connection_String</input>
                        <input name="value">test</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result">test</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getInfo" sequence="2" type="negative">
            <description>Use getInfo proc to get a value that does not exists</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="getInfo_type">negative</input>
                        <input name="name">connection</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_checkModelFileResources" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>This tests the proc checkModelFileResources</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="modDir">Mod$lastShortVersion</input>
                        <input name="path">Models</input>
                        <input name="autoTextFile">AutoConversion.txt</input> 
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result">Models/Mod$lastShortVersion</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getObjectTypes" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>This tests the proc getObjectTypes</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="type">all</input>
                        <input name="type1"/>
                        <input name="type2">*</input>
                        <input name="type3">USER_CONSTRAINTS</input>
                        <input name="invalidType">failure</input>
                    </inputs>
                    <outputs count="4">
                        <output name="objTypeException">\nDDL type FAILURE is invalid.\nShould be one of: \n\nUSER_TABLES\nUSER_TAB_COLUMNS\nUSER_CONSTRAINTS\nUSER_CONS_COLUMNS\nUSER_INDEXES\nUSER_IND_COLUMNS\nTEXT_INDEXES\nUSER_TRIGGERS\nUSER_SEQUENCES\nUSER_PROCEDURES \n</output>
                        <output name="list">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_INDEXES USER_IND_COLUMNS TEXT_INDEXES USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</output>
                        <output name="list2">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_INDEXES USER_IND_COLUMNS TEXT_INDEXES USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES USER_VIEWS</output>
                        <output name="list1">USER_CONSTRAINTS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_dbCompareCorrectUsage" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>Tests for correct use of dbCompareCorrectUsage</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="0">
                    </inputs>
                    <outputs count="1">
                        <output name="outstatement">Incorrect input:</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getModelTypes" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>This tests the proc getModelTypes</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="ModVersion">Mod$currentShortVersion</input>
                        <input name="modFileDir">./Models/Mod$currentShortVersion</input>
                    </inputs>
                    <outputs count="1">
                        <output name="list">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_INDEXES USER_IND_COLUMNS TEXT_INDEXES USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_hms" sequence="1" type="positive">
            <description>This UT tests the hms proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <!-- Scenario1: This tests the hms proc with a valid value of 2 digit -->
                        <input name="duration1">55</input>
                        <!-- Scenario2: This tests the hms proc with a valid value of 2 digit -->
                        <input name="duration2">60</input>
                        <!-- Scenario3: This tests the hms procwith a valid value of 3 digit -->
                        <input name="duration3">100</input>
                        <!-- Scenario4: This tests the hms proc with a valid value of 4 digit -->
                        <input name="duration4">5000</input>
                        <!-- Scenario5: This tests the hms proc with 0 duration -->
                        <input name="duration5">0</input>
                    </inputs>
                    <outputs count="7">
                        <output name="hms_names">positive</output>
                        <output name="hms_scenarioCount">5</output>
                        <output name="hms_out1">0 0 55</output>
                        <output name="hms_out2">0 1 0</output>
                        <output name="hms_out3">0 1 40</output>
                        <output name="hms_out4">1 23 20</output>
                        <output name="hms_out5">0 0 0</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_hms" sequence="2" type="negative">
            <description>This UT tests the hms proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <!-- # #The below tests are open till the required enhancements are done as per DVT 634908 -->
                    <inputs count="3">
                        <!-- Scenario1: This tests the hms proc with an alphanumeric value for duration -->
                        <input name="duration1">abc</input>
                        <!-- Scenario2: This tests the hms proc with a floating value for duration -->
                        <input name="duration2">1.5</input>
                        <!-- Scenario3: This tests the hms proc with negative duration -->
                        <input name="duration3">-2</input>
                    </inputs>
                    <outputs count="5">
                        <output name="hms_names">negative</output>
                        <output name="hms_scenarioCount">3</output>
                        <output name="hms_out1">Not a valid Input</output>
                        <output name="hms_out2">Not a valid Input</output>
                        <output name="hms_out3">Not a valid Input</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_prettyTime" sequence="1" type="positive">
            <description>This tests the prettyTime proc </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <!-- Scenario1: This tests the prettyTime proc with a valid input list with only sec -->
                        <input name="hms1">0 0 59</input>
                        <!-- Scenario2: This tests the prettyTime proc with a valid input list with only min and sec -->
                        <input name="hms2">0 4 59</input>
                        <!-- Scenario3: This tests the prettyTime proc with a valid input list with hrs, min and sec -->
                        <input name="hms3">12 4 59</input>
                    </inputs>
                    <outputs count="5">
                        <output name="prettyTime_scenarioCount">3</output>
                        <output name="prettyTime_names">positive</output>
                        <output name="prettyTime_out1">59 seconds</output>
                        <output name="prettyTime_out2">4 minutes, 59 seconds</output>
                        <output name="prettyTime_out3">12 hours, 4 minutes, 59 seconds</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <!-- The below tests are commented out till the required enhancements are done as per DVT 634907 -->
        <!-- <test name="tcl_unit_prettyTime" sequence="2" type="negative">
                <description>This tests the prettyTime proc </description>
                <versions>
                    <version number="03010100" condition="ge">
                <inputs count="1"> -->
        <!-- Scenario1: This tests the prettyTime proc with a invalid input list seconds gerater than 60 -->
        <!-- <input name="hms">12 4 62</input>
                </inputs>
                <outputs count="1">
                    <output name="prettyTime_names">negative</output>
                    <output name="prettyTime_out1">Invalid hms</output></output>
                </outputs>
                        </version>
                </versions>
        </test> -->
        <test name="tcl_unit_getDriverFile" sequence="1" type="positive">
            <description>This tests the proc getDriverFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="getDriverFile">positive</input>
                        <input name="workingdir">[pwd]</input>
                        <!-- <input name="incorrectworkingdir">[pwd]/failure</input>                   -->
                    </inputs>
                    <outputs count="1">
                        <output name="DriverFile">[pwd]/AutoConversion.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getDriverFile" sequence="1" type="negative">
            <description>This tests the proc getDriverFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="getDriverFile">negative</input>
                        <!-- <input name="workingdir">[pwd]</input>                   -->
                        <input name="incorrectworkingdir">[pwd]/failure</input>
                    </inputs>
                    <outputs count="1">
                        <output name="DriverFile">[pwd]/AutoConversion.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getProductName" sequence="1" type="positive">
            <description>This tests the proc getProductName</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="prdPrefix1">MC</input>
                        <input name="prdPrefix2">M2</input>
                        <input name="prdPrefix3">CR</input>
                        <input name="prdPrefix4">CF</input>
                        <input name="prdPrefix5"> </input>
                        <input name="prdPrefix6">ABC</input>
                    </inputs>
                    <outputs count="6">
                        <output name="expected_Result1">MaxMC</output>
                        <output name="expected_Result2">Maxsys2</output>
                        <output name="expected_Result3">CareRadius</output>
                        <output name="expected_Result4">CareFind</output>
                        <output name="expected_Result5"> </output>
                        <output name="expected_Result6">ABC</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_correctArgs" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>This tests the proc correctArgs</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="argc1">0</input>
                        <input name="argv1">Mod3100</input>
                        <input name="argc2">3</input>
                        <input name="argv2">Mod600/ siteuser/sitepass@siteserver cert600.txt</input>
                        <input name="argc3">4</input>
                        <input name="argv3">Mod600/ siteuser/sitepass@siteserver cert600.txt SILENT</input>
                    </inputs>
                    <outputs count="1">
                        <output name="output1">Not enough arguments</output>
                        <output name="output2">Mod600/ siteuser/sitepass@siteserver cert600.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_checkAddSequences" sequence="1" type="positive">
            <description>This tests the proc correctArgs</description>
                <versions>
                    <version number="03010100" condition="ge">sts>
                    <inputs count="2">
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="returnValue">{ADB_ADDRESS_BOOK ADB_SEQUENCE {{} 1}}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareTables" sequence="1" type="positive">
            <description> This test the number of tablke need to be ADD</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="11">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="model_header1">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="target_header1">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="model_key1">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="target_key1">MAX2_SLA_TS</input>
                        <input name="target_header2">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="model_header2">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="target_key2">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="model_key2">MAX2_SLA_TS</input>
                    </inputs>
                    <outputs count="5">
                        <output name="expected_Result1">{AAD_ADB_ADDRESS_BOOK_ADDRESS MAX2_EHA_TS}</output>
                        <output name="addDelete1">ADD.TABLES</output>
                        <output name="expected_Result2">{AAD_ADB_ADDRESS_BOOK_ADDRESS MAX2_EHA_TS}</output>
                        <output name="addDelete2">DROP.TABLES</output>
                        <output name="compareTables_Info">positive</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareTables" sequence="2" type="negative">
            <description> Unit test for compareTables proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="target_header">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="model_header">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                        <input name="target_key">MAX2_SLA_TS MAX2_EHA_TS</input>
                        <input name="model_key">MAX2_SLA_TS MAX2_EHA_TS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result">0</output>
                        <output name="compareTables_Info">negative</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareConstraints" sequence="1" type="positive">
            <description>This tests the proc compareConstraints</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="totalCases">4</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleModelArray1">modelDefSampleAddCons</input>
                        <input name="sampleTargetArray1">targetDefSampleAddCons</input>
                        <input name="sampleModelArray2">targetDefSampleAddCons</input>
                        <input name="sampleTargetArray2">modelDefSampleAddCons</input>
                        <input name="sampleModelArray3">modelDefSampleEnabCons</input>
                        <input name="sampleTargetArray3">targetDefSampleEnabCons</input>
                        <input name="sampleModelArray4">modelDefSampleAddCons</input>
                        <input name="sampleTargetArray4">modelDefSampleAddCons</input>
                    </inputs>
                    <outputs count="4">
                        <output name="sampleResults1">ResultsSampleAddCons</output>
                        <output name="sampleResults2">ResultsSampleDropCons</output>
                        <output name="sampleResults3">ResultsSampleEnabCons</output>
                        <output name="sampleResults4">ResultsSampleSameCons</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareProcedures" sequence="1" type="positive">
            <description>This tests the proc compareProcedures</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="totalCases">4</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleModelArray1">modelDefSampleProcs1</input>
                        <input name="sampleTargetArray1">targetDefSampleProcs1</input>
                        <input name="sampleModelArray2">targetDefSampleProcs1</input>
                        <input name="sampleTargetArray2">modelDefSampleProcs1</input>
                        <input name="sampleModelArray3">modelDefSampleProcs1</input>
                        <input name="sampleTargetArray3">modelDefSampleProcs2</input>
                        <input name="sampleModelArray4">modelDefSampleProcs1</input>
                        <input name="sampleTargetArray4">modelDefSampleProcs1</input>
                    </inputs>
                    <outputs count="4">
                        <output name="sampleResults1">resultsSampleProcs1</output>
                        <output name="sampleResults2">resultsSampleProcs2</output>
                        <output name="sampleResults3">resultsSampleProcs3</output>
                        <output name="sampleResults4">resultsSampleProcs4</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareColBits" sequence="1" type="positive">
            <description>UTs for the proc compareColBits</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="37">
                        <input name="compareColBits_testcount">9</input>
                        <input name="compareColBits_names">positive</input>
                        <!--  Scenario:1 This tests the compareColBits proc with a valid input-->
                        <input name="mtypes1">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes1">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol1">VARCHAR2 12 \{\} \{\} 6 \{\}</input>
                        <input name="targetCol1">VARCHAR2 12 \{\} \{\} 6 \{\}</input>

                        <!--   Scenario:2 This tests the compareColBits proc with a valid input with different Data length -->
                        <input name="mtypes2">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes2">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol2">VARCHAR2 10 \{\} \{\} 6 \{\}</input>
                        <input name="targetCol2">VARCHAR2 12 \{\} \{\} 6 \{\}</input>

                        <!--  Scenario:3 This tests the compareColBits proc with a valid input with different Data Precision and same data scale-->
                        <input name="mtypes3">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes3">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol3">NUMBER 12 4 0 6 \{\}</input>
                        <input name="targetCol3">NUMBER 12 3 0 6 \{\}</input>

                        <!--  Scenario:4 This tests the compareColBits proc with a valid input with different Data Scale and Same Data Precision-->
                        <input name="mtypes4">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes4">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol4">NUMBER 12 0 5 7 \{\}</input>
                        <input name="targetCol4">NUMBER 12 0 6 7 \{\}</input>

                        <!--  Scenario:5 This tests the compareColBits proc with a valid input with differnt Column Ids-->
                        <input name="mtypes5">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes5">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol5">DATE 12 0 5 7 \{\}</input>
                        <input name="targetCol5">DATE 12 0 5 6 \{\}</input>

                        <!--  Scenario:6 This tests the compareColBits proc with a valid input with different Data Default Null values-->
                        <input name="mtypes6">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes6">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol6">DATE 12 0 5 7 \\"\\"</input>
                        <input name="targetCol6">DATE 12 0 5 7 (NULL)</input>

                        <!--  Scenario:7 This tests the compareColBits proc with a valid input with different Data Default Null values in braces-->
                        <input name="mtypes7">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes7">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol7">DATE 12 0 5 7 (NULL)</input>
                        <input name="targetCol7">DATE 12 0 5 7 ()</input>

                        <!--  Scenario:8 This tests the compareColBits proc with a valid input with different Data Default Null values in braces-->
                        <input name="mtypes8">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes8">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol8">DATE 12 0 5 7 (NULL)</input>
                        <input name="targetCol8">DATE 12 0 5 7 (ABC)</input>

                        <!--  Scenario:9 This tests the compareColBits proc with model Data Type as Long Raw and target Data Type as Blob-->
                        <input name="mtypes9">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="targetTypes9">DATA_TYPE DATA_LENGTH DATA_PRECISION DATA_SCALE COLUMN_ID DATA_DEFAULT</input>
                        <input name="modelCol9">\{LONG RAW\} 12 0 5 7 (NULL)</input>
                        <input name="targetCol9">BLOB 12 0 5 7 (NULL)</input>
                    </inputs>
                    <outputs count="1">
                        <output name="compareColBits_out1"/>
                        <output name="compareColBits_out2">VARCHAR2 10 \{\} \{\} 6 \{\}</output>
                        <output name="compareColBits_out3">NUMBER 12 4 0 6 \{\}</output>
                        <output name="compareColBits_out4">NUMBER 12 0 5 7 \{\}</output>
                        <output name="compareColBits_out5"/>
                        <output name="compareColBits_out6">DATE 12 0 5 7 SETNULL</output>
                        <output name="compareColBits_out7">DATE 12 0 5 7 SETNULL</output>
                        <output name="compareColBits_out8">DATE 12 0 5 7 SETNULL</output>
                        <output name="compareColBits_out9">LONG RAW 12 0 5 7 (NULL)</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_updateInfo" sequence="1" type="positive">
            <description>This tests the proc updateInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="update_info"/>
                        <input name="name">connection_String</input>
                        <input name="value">test</input>
                        <input name="updated_value">updated_test</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result">updated_test</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_updateInfo" sequence="1" type="negative">
            <description>Use updateInfo proc to update a value that does not exists</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="update_info">negative</input>
                        <input name="name">connection</input>
                        <input name="updated_value">updated_test</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result">updated_test</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_date_now" sequence="1" type="positive">
            <description>This tests the date_now proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="0">
                    </inputs>
                    <outputs count="0">
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_dbCompare.unsetAll" sequence="1" type="positive">
            <description>This tests the dbCompare.unsetAll proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="0">
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection">Mod2461</input>
                        <input name="sampleReport">testoutdbcompare.txt</input>
                        <input name="sampleFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="correctionScriptName">correctionScriptName.txt</input>
                    </inputs>
                    <outputs count="0">
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_checkDropSequences" sequence="1" type="positive">
            <description>UT of proc checkDropSequences</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="sampleDatacheckDrop">$testDataDir/Array_Input_Output.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="result">AFA_SEQUENCE AFC_SEQUENCE</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getClientTables" sequence="1" type="positive">
        <!-- todo items may change -->
            <description>This tests the proc getClientTables</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="no_of_scenarios">2</input>
                        <input name="source_where_file1">$testDataDir/CR0301_WHERE1.txt</input>
                        <input name="source_where_file2">$testDataDir/CR0301_WHERE2.txt</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">ADE_APPEAL_DECISION 1 AET_EFFECTUATION_TYPE 1 STF_STAFF 1</output>
                        <output name="expected_Result2">ADE_APPEAL_DECISION 1 AET_EFFECTUATION_TYPE 1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getClientTables" sequence="1" type="negative">
            <description>This tests the proc getClientTables</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="source_where_file1">$testDataDir/CR0301_WHERE3.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getValuesFor" sequence="1" type="positive">
            <description>This tests the proc getValuesFor</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="countOfScenarios">7</input>
                        <input name="inputList0"/>
                        <input name="inputList1">modelDefGVF</input>
                        <input name="inputList2">modelDefGVF.USER_CONSTRAINTS</input>
                        <input name="inputList3">modelDefGVF.USER_CONSTRAINTS.SBR_SURVEY_BUILDER</input>
                        <input name="inputList4">modelDefGVF.USER_CONSTRAINTS.SBR_SURVEY_BUILDER.SBR_NOT_NULL_02</input>
                        <input name="inputList5">modelDefGVF.USER_CONSTRAINTS.SBR_SURVEY_BUILDER.SBR_NOT_NULL_02.STATUS</input>
                        <input name="inputList6">modelDefGVF.USER_CONSTRAINTS.SBR_SURVEY_BUILDER.SBR_NOT_NULL_02.STATUS.ENABLED</input>
                    </inputs>
                    <outputs count="7">
                        <output name="sampleResults0"/>
                        <output name="sampleResults1">USER_CONSTRAINTS.key {{SBR_NOT_NULL_01 SBR_NOT_NULL_02 SBR_NOT_NULL_03}} USER_CONSTRAINTS.header SBR_SURVEY_BUILDER DEF.USER_CONSTRAINTS.data.index.VALIDATED 4 DEF.USER_CONSTRAINTS.data.index.R_CONSTRAINT_NAME 3 DEF.USER_CONSTRAINTS.data.index.DELETE_RULE 1 DEF.USER_CONSTRAINTS.data.index.CONSTRAINT_TYPE 0 USER_CONSTRAINTS.data {{{C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED}}} DEF.USER_CONSTRAINTS.data.index.STATUS 5 DEF.USER_CONSTRAINTS.data.index.INDEX_NAME 2</output>
                        <output name="sampleResults2">SBR_SURVEY_BUILDER</output>
                        <output name="sampleResults3">SBR_NOT_NULL_01 SBR_NOT_NULL_02 SBR_NOT_NULL_03</output>
                        <output name="sampleResults4">C {} {} {} VALIDATED ENABLED</output>
                        <output name="sampleResults5">ENABLED</output>
                        <output name="sampleResults6"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_delete_like" sequence="1" type="positive">
            <description>This tests the proc delete_like</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="testdir">delete_like_dir</input>
                        <input name="filenamelist">fone.txt done.lst lonely.lst fast.lst</input>
                        <input name="pattern">f*.lst *one.txt *one* *nomatch*.pdf  *.lst</input>
                        <input name="negativefilename">fone.txt</input>
                        <input name="negativepattern">f*.txt</input>
                        <input name="negativefilename1">fone1.txt fone1.txt fone3.txt fone4.txt fone5.txt fone6.txt</input>
                        <input name="negativepattern1">f*.txt</input>
                    </inputs>
                    <outputs count="2">
                        <output name="negativeResult">invalid command name \\"1\\"</output>
                        <output name="negativeResult1">Too many matched files to delete</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getConversionInfo" sequence="1" type="positive">
            <description>This tests the proc getConversionInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">2</input>
                        <input name="driverFile">AutoConversionT.txt</input>
                        <input name="no_of_scenarios">1</input>
                        <input name="startLine1">1 CR01020304.sql 01.02.03.04 CR Mod1234</input>
                        <input name="currentProduct">CR</input>
                        <input name="priorVersion1">$lastVersionDots</input>
                        <input name="currentVersion1">$currentVersionDots</input>
                        <input name="testVersion1">$currentVersionDots</input>
                        <input name="startLine2">1 CR01020304.sql 01.02.03.04 CR Mod1234</input>
                        <input name="priorVersion2">$lastVersionDots</input>
                        <input name="currentVersion2">$currentVersionDots</input>
                        <input name="testVersion2">09.09.09.09</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{3 CR$currentVersion.sql $currentVersionDots CR Mod$currentShortVersion}</output>
                        <output name="expected_Result2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getConversionInfo" sequence="1" type="negative">
            <description>This tests the proc getConversionInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="driverFile">AutoConversionT.txt</input>
                        <input name="no_of_scenarios">1</input>
                        <input name="startLine1">1 CR01020304.sql 01.02.03.04 CR Mod1234</input>
                        <input name="currentProduct">CR</input>
                        <input name="priorVersion1">$lastVersionDots</input>
                        <input name="currentVersion1">$currentVersionDots</input>
                        <input name="testVersion1">09.09.09.09</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1"/>
                        <output name="expected_Result2"/>
                        <output name="expected_Result3"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareTriggers" sequence="1" type="positive">
        <!-- todo proc may change -->
            <description>This tests the proc compareTriggers</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="totalCases">1</input>
                            <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                            <input name="sampleModel1">sampleModelCmpTrig1320</input>
                            <input name="sampleTarget1">sampleTargetCmpTrig1320</input>
                        </inputs>
                        <outputs count="1">
                            <output name="sampleResults1">XLD_XLT_TRANSLATION_DATA</output>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getReportFile" sequence="1" type="positive">
            <description>This tests the proc getReportFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="no_of_scenarios">3</input>
                        <input name="outdir1">test</input>
                        <input name="reportfile1">sample.txt</input>
                        <input name="toolname1">dbCompare</input>
                        <input name="outdir2"/>
                        <input name="reportfile2">sample.txt</input>
                        <input name="toolname2">dbCompare</input>
                        <input name="outdir3"></input>
                        <input name="reportfile3">test/sample.txt</input>
                        <input name="toolname3">dbCompare</input>
                    </inputs>
                    <outputs count="3">
                        <output name="Report_File1">sample.txt</output>
                        <output name="Report_File2">sample.txt</output>
                        <output name="Report_File3">test/sample.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>

        <test name="tcl_unit_getReportFile" sequence="2" type="negative">
            <description>This tests the proc getReportFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">2</input>
                        <input name="outdir1"/>
                        <input name="reportfile1"/>
                        <input name="toolname1">dbCompare</input>
                        <input name="outdir2"/>
                        <input name="reportfile2"/>
                        <input name="toolname2"/>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_error1">Could not open logfile</output>
                        <output name="expected_error2">Could not open logfile</output>                  
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_fileJoinX1.1" sequence="1" type="positive">
            <description>This tests the proc fileJoinX</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="workingdir1">$testDataDir</input>
                        <input name="file1">AutoConversion1.txt</input>
                        <input name="workingdir2"/>
                        <input name="file2">AutoConversion.txt</input>
                        <input name="workingdir3"/>
                        <input name="file3"/>
                        <input name="workingdir4">testdata</input>
                        <input name="file4"/>
                        <input name="workingdir5">//testdata</input>
                        <input name="file5">AutoConversion1.txt</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">$testDataDir/AutoConversion1.txt</output>
                        <output name="expected_Result2">/AutoConversion.txt</output>
                        <output name="expected_Result3"/>
                        <output name="expected_Result4">testdata</output>
                        <output name="expected_Result5">//testdata/AutoConversion1.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_fileJoinX1.2" sequence="1" type="negative">
            <description>This tests the proc fileJoinX</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="workingdir1">testdata</input>
                        <input name="path1">//test</input>
                        <input name="file1">//AutoConversion.txt</input>
                        <input name="workingdir2">//testdata</input>
                        <input name="path2">//</input>
                        <input name="file2">//AutoConversion.txt</input>
                        <input name="workingdir3">//testdata</input>
                        <input name="path3">test//</input>
                        <input name="file3">//AutoConversion.txt//</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">testdata/test/AutoConversion.txt</output>
                        <output name="expected_Result2">//testdata/AutoConversion.txt</output>
                        <output name="expected_Result3">//testdata/test/AutoConversion.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_srange_1.1" sequence="1" type="positive">
            <description>This tests the proc srange</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">2</input>
                        <input name="logonstring">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input>
                        <input name="server">cic-svr-db09-site</input>
                        <input name="testsection1">to</input>
                        <input name="testsection2">from</input>
                        <input name="testtoken1">/</input>
                        <input name="testtoken2">@</input>
                    </inputs>
                    <outputs count="1">
                        <output name="finalresult1">UNIT_CRTRUNK</output>
                        <output name="finalresult2">cic-svr-db09-site</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_srange_1.2" sequence="3" type="positive">
            <description>This tests the proc srange</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="productversion">CR_03.01.00.00</input>
                    </inputs>
                    <outputs count="1">
                        <output name="outputversion">03.01.00.00</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getPrevDriverRow" sequence="1" type="positive">
            <description>This tests the proc getPrevDriverRow</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">3</input>
                        <input name="driverFile1">$testDataDir/AutoConversion1.txt</input>
                        <input name="currentScript1">CR03030200.sql</input>
                        <input name="driverFile2">$testDataDir/AutoConversion1.txt</input>
                        <input name="currentScript2">CR03030501.sql</input>
                        <input name="driverFile3">$testDataDir/AutoConversion1.txt</input>
                        <input name="currentScript3">CR03030700.sql</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">1 CR03030100.sql 03.03.01.00 CR Mod3310</output>
                        <output name="expected_Result2">5 CR03030500.sql 03.03.05.00 CR Mod3350</output>
                        <output name="expected_Result3">-1</output>
                    </outputs>
                    </version>
                </versions>
        </test>

        <test name="tcl_unit_getPrevDriverRow" sequence="2" type="negative">
            <description>This tests the proc getPrevDriverRow when no driver file exists</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">3</input>
                        <input name="driverFile1">$testDataDir/AutoConversion_GetPrevDriverRow.txt</input>
                        <input name="currentScript1">START</input>
                        <input name="driverFile2">$testDataDir/AutoConversion1.txt</input>
                        <input name="currentScript2">1 CR03030100.sql 03.03.01.00 CR Mod3310</input>
                        <input name="driverFile3">$testDataDir/AutoConversion1.txt</input>
                        <input name="currentScript3">START</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">$testDataDir/AutoConversion_GetPrevDriverRow.txt not found.\nCheck your spelling and try again.</output>
                        <output name="expected_Result2">-1</output>
                        <output name="expected_Result3">-1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findListItemAll" sequence="1" type="positive">
            <description>This tests the proc findListItemAll</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">2</input>
                        <input name="listName1">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem1">USER_CONSTRAINTS</input>
                        <input name="listName2">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_CONSTRAINTS USER_PROCEDURES</input>
                        <input name="searchItem2">USER_CONSTRAINTS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">2</output>
                        <output name="expected_Result2">2 4</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findListItemAll" sequence="2" type="negative">
            <description>This tests the proc findListItemAll</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="no_of_scenarios">4</input>
                        <input name="listName1">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem1">USER_TAB_INDEX</input>
                        <input name="listName2"/>
                        <input name="searchItem2">USER_TAB_INDEX</input>
                        <input name="listName3"/>
                        <input name="searchItem3"/>
                        <input name="listName4">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem4">USER_CONSTRAINTS USER_CONS_COLUMNS</input>
                    </inputs>
                    <outputs count="4">
                        <output name="expected_Result1"/>
                        <output name="expected_Result2"/>
                        <output name="expected_Result3"/>
                        <output name="expected_Result4"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaSequences" sequence="1" type="positive">
        <!-- todo version constrained. -->
        <!-- todo list 1 should be cut down with shorter table list. -->
            <description> Unit test for getSchemaSequences proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="schemaConnections">targetConnection</input>
                         <input name="targetConnection_server">db09</input>
                         <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="tab_prefix1">ADB</input>
                        <input name="tab_prefix2">STF</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_List1">ADB_ADDRESS_BOOK ADB_SEQUENCE {{ADB_UID 1}}</output>
                        <output name="expected_List2">{STF_STAFF STF_STAFF STF_STAFF STF_STAFF} {STF_AHP_ID_SEQUENCE STF_NUR_ID_SEQUENCE STF_PHY_ID_SEQUENCE STF_SEQUENCE} {{{} 2} {{} 2} {{} 2} {STF_UID 2}}</output>

                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaSequences" sequence="2" type="negative">
            <description> Unit test for getSchemaSequences proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="tab_prefix1">ADB-</input>
                        <input name="tab_prefix2">STF-</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_List1"/>
                        <output name="expected_List2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findListItem" sequence="1" type="positive">
            <description>This tests the proc findListItem</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="no_of_scenarios">2</input>
                        <input name="listName1">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem1">USER_CONSTRAINTS</input>
                        <input name="listName2">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem2">USER_CONSTRAINTS USER_CONS_COLUMNS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">2</output>
                        <output name="expected_Result2">-1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findListItem" sequence="2" type="negative">
            <description>This tests the proc findListItem</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">3</input>
                        <input name="listName1">USER_TABLES USER_TAB_COLUMNS USER_CONSTRAINTS USER_CONS_COLUMNS USER_TRIGGERS USER_SEQUENCES USER_PROCEDURES</input>
                        <input name="searchItem1">USER_TAB_INDEX</input>
                        <input name="listName2"/>
                        <input name="searchItem2">USER_TAB_INDEX</input>
                        <input name="listName3"/>
                        <input name="searchItem3"/>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">-1</output>
                        <output name="expected_Result2">-1</output>
                        <output name="expected_Result3">-1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareIndexes" sequence="1" type="positive">
            <description>This tests the proc compareIndexes</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="18">
                        <input name="totalCases">9</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleModel1">sampleModelCmpInd1</input>
                        <input name="sampleTarget1">sampleTargetCmpInd1</input>
                        <input name="sampleModel2">sampleModelCmpInd1</input>
                        <input name="sampleTarget2">sampleTargetCmpInd2</input>
                        <input name="sampleModel3">sampleTargetCmpInd2</input>
                        <input name="sampleTarget3">sampleModelCmpInd1</input>
                        <input name="sampleModel4">sampleModelCmpInd4</input>
                        <input name="sampleTarget4">sampleTargetCmpInd4</input>
                        <input name="sampleModel5">sampleTargetCmpInd4</input>
                        <input name="sampleTarget5">sampleModelCmpInd4</input>
                        <input name="sampleModel6">sampleModelCmpInd4</input>
                        <input name="sampleTarget6">sampleModelCmpInd4</input>
                        <input name="sampleModel7">sampleModelCmpInd7</input>
                        <input name="sampleTarget7">sampleTargetCmpInd7</input>
                        <input name="sampleModel8">sampleModelCmpInd8</input>
                        <input name="sampleTarget8">sampleTargetCmpInd8</input>
                        <input name="sampleModel9">sampleModelCmpInd9</input>
                        <input name="sampleTarget9">sampleTargetCmpInd9</input>
                    </inputs>
                    <outputs count="9">
                        <output name="sampleResults1">sampleResultsCmpInd1</output>
                        <output name="sampleResults2">sampleResultsCmpInd2</output>
                        <output name="sampleResults3">sampleResultsCmpInd3</output>
                        <output name="sampleResults4">sampleResultsCmpInd4</output>
                        <output name="sampleResults5">sampleResultsCmpInd5</output>
                        <output name="sampleResults6">sampleResultsCmpInd6</output>
                        <output name="sampleResults7">sampleResultsCmpInd7</output>
                        <output name="sampleResults8">sampleResultsCmpInd8</output>
                        <output name="sampleResults9">sampleResultsCmpInd9</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findSpoolFile" sequence="1" type="positive">
            <description>This tests the proc findSpoolFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="type">positive</input>
                        <input name="scriptName">testFindSpoolFile</input>
                        <input name="ext">out</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findSpoolFile" sequence="1" type="negative">
            <description>This tests the proc findSpoolFile</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="type">negative</input>
                        <input name="scriptName">testFindSpoolFile</input>
                        <input name="ext">out</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_selectFromFile1.1" sequence="1" type="positive">
            <description>This tests the proc selectFromFile1.1</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="RconstraintName">CNT_PRIMARY_KEY</input>
                    </inputs>
                    <outputs count="1">
                        <output name="list1">CNT_COUNTRY CNT_PRIMARY_KEY {{CNT_CODE 1}}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_selectFromFile1.2" sequence="1" type="negative">
            <description>This tests the proc selectFromFile1.2 with wrong objectname</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="no_of_scenarios">2</input>
                        <input name="type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="key1">./Models/Mod3100</input>
                        <input name="key2"/>
                        <input name="targetConnection"/>
                        <input name="objectname1">USER_CONS_COLUMNS</input>
                        <input name="objectname2">USER_TABLES</input>
                        <input name="RconstraintName1">qCNT_PRIMARY_KEY</input>
                        <input name="RconstraintName2">CNT_PRIMARY_KEY</input>
                    </inputs>
                    <outputs count="1">
                        <output name="list1">Model table prefix qCN cannot be found. Model must be invalid.</output>
                        <output name="list2">no files matched glob pattern \\"//USER_TABLES\\"</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getModDirsFrom" sequence="1" type="positive">
            <description>This tests the proc getModDirsFrom</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="4">
                        <input name="driverFile">AutoConversion.txt</input>
                        <input name="sourceModDir">Mod3000</input>
                        <input name="targetModDir1">Mod3110</input>
                        <input name="targetModDir2"/>
                    </inputs>
                    <outputs count ="1">
                        <output name="expected_result">Mod3100 Mod3110</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaVersions" sequence="1" type="positive">
            <description>This tests the proc getSchemaVersions</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="10">
                        <!-- <input name="connectionString">UNIT_CR1618/UNIT_CR1618@cic-svr-db08-orcl</input> -->
                                                <input name="schemaConnections">targetConnection</input>
                                                <input name="targetConnection_server">db09</input>
                                                <input name="targetConnection_schemaVersion">01061800</input>
                        <input name="itemInput1">CREATE EB UPDATE</input>
                        <input name="itemInput2">CREATE EB</input>
                        <input name="itemInput3">EB UPDATE</input>
                        <input name="itemInput4">CREATE UPDATE</input>
                        <input name="itemInput5">CREATE</input>
                        <input name="itemInput6">EB</input>
                        <input name="itemInput7">UPDATE</input>
                        <input name="itemInput8">WRONG INPUT</input>
                    </inputs>
                    <outputs count="10">
                        <output name="getSchemaVersions_ScenarioCount">8</output>
                        <output name="getSchemaVersions_names">positive</output>
                        <output name="getSchemaVersionsOut1">01.06.18 01.06.17 01.06.16 01.06.15 01.06.14 01.06.13 01.06.12 01.06.11 01.06.10 01.06.10 01.06.09 01.06.08 01.06.07 01.06.06 01.06.05 01.06.05 01.06.04 01.06.03 01.06.02 01.06.01 01.06.00 01.06.00 01.05.00 01.05.00 01.04.00 01.04.00</output>
                        <output name="getSchemaVersionsOut2">01.06.06 01.06.05 01.06.05 01.06.04 01.06.03 01.06.02 01.06.01 01.04.00 01.04.00</output>
                        <output name="getSchemaVersionsOut3">01.06.18 01.06.17 01.06.16 01.06.15 01.06.14 01.06.13 01.06.12 01.06.11 01.06.10 01.06.10 01.06.09 01.06.08 01.06.07 01.06.06 01.06.05 01.06.05 01.06.04 01.06.03 01.06.02 01.06.01 01.06.00 01.06.00 01.05.00 01.05.00</output>
                        <output name="getSchemaVersionsOut4">01.06.18 01.06.17 01.06.16 01.06.15 01.06.14 01.06.13 01.06.12 01.06.11 01.06.10 01.06.10 01.06.09 01.06.08 01.06.07 01.06.00 01.06.00 01.05.00 01.05.00 01.04.00 01.04.00</output>
                        <output name="getSchemaVersionsOut5">01.04.00 01.04.00</output>
                        <output name="getSchemaVersionsOut6">01.06.06 01.06.05 01.06.05 01.06.04 01.06.03 01.06.02 01.06.01</output>
                        <output name="getSchemaVersionsOut7">01.06.18 01.06.17 01.06.16 01.06.15 01.06.14 01.06.13 01.06.12 01.06.11 01.06.10 01.06.10 01.06.09 01.06.08 01.06.07 01.06.00 01.06.00 01.05.00 01.05.00</output>
                        <output name="getSchemaVersionsOut8"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaVersion" sequence="1" type="positive">
        <!-- todo items may change - recommend modify shs instead -->
            <description>Test for proc getSchemaVersion</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="9">
                        <!-- <input name="connectionString">UNIT_CR1618/UNIT_CR1618@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">01061800</input>
                        <input name="itemInput1">CREATE EB UPDATE</input>
                        <input name="itemInput2">CREATE EB</input>
                        <input name="itemInput3">EB UPDATE</input>
                        <input name="itemInput4">CREATE UPDATE</input>
                        <input name="itemInput5">CREATE</input>
                        <input name="itemInput6">EB</input>
                        <input name="itemInput7">UPDATE</input>
                    </inputs>
                    <outputs count="9">
                        <output name="getSchemaVersion_ScenarioCount">7</output>
                        <output name="getSchemaVersion_names">positive</output>
                        <output name="getSchemaVersionOut1">01.06.18</output>
                        <output name="getSchemaVersionOut2">01.06.06</output>
                        <output name="getSchemaVersionOut3">01.06.18</output>
                        <output name="getSchemaVersionOut4">01.06.18</output>
                        <output name="getSchemaVersionOut5">01.04.00</output>
                        <output name="getSchemaVersionOut6">01.06.06</output>
                        <output name="getSchemaVersionOut7">01.06.18</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findSequenceTarget" sequence="1" type="positive">
            <description> Unit test for findSequenceTarget proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="seqName1">TCL_SEQUENCE</input>
                        <input name="seqName2">SCH</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">TCL_UID</output>
                        <output name="expected_Result2">SCH_UID</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_findSequenceTarget" sequence="1" type="negative">
            <description> Unit test for findSequenceTarget proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="seqName1">PMR_SEQUENCE</input>
                        <input name="seqName2">UCF_SEQ</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1"/>
                        <output name="expected_Result2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSHSinsert" sequence="1" type="positive">
            <description> Unit test for getSHSinsert proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="13">
                        <input name="no_of_scenarios">2</input>
                        <input name="scriptname1">UT_Test</input>
                        <input name="type1">USER_SEQUENCE</input>
                        <input name="desc1">This is a test script</input>
                        <input name="status1">PASS</input>
                        <input name="newversion1"/>
                        <input name="oldversion1"/>
                        <input name="scriptname2">UT_Test</input>
                        <input name="type2">USER_SEQUENCE</input>
                        <input name="desc2">This is a test script</input>
                        <input name="status2">PASS</input>
                        <input name="newversion2">3.01.00.01</input>
                        <input name="oldversion2">3.00.00.01</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_selectFromSchema" sequence="1" type="positive">
            <description>This tests the proc selectFromSchema with correct arguments</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="4">
                        <input name="no_of_scenarios">3</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <!-- <input name="targetConnection">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="type1">positive</input>
                        <input name="type2">negative</input>
                        <input name="type3">negative</input>
                        <input name="table1">ADB_ADDRESS_BOOK</input>
                        <input name="table2">AZDB_ADDRESS_BOOK</input>
                        <input name="table3">ADB_ADDRESS_BOOK</input>
                        <input name="RconstraintName1">ADB_PRIMARY_KEY</input>
                        <input name="RconstraintName2">ADB_PRIMARY_KEY</input>
                        <input name="RconstraintName3">ZAZWQB_PRIMARY_KEY</input>
                    </inputs>
                    <outputs count="1">
                        <output name="list1">ADB_ADDRESS_BOOK ADB_PRIMARY_KEY {{ADB_UID 1}}</output>
                        <output name="list2">{} {} {}</output>
                        <output name="list3">ADB_ADDRESS_BOOK {} {}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaProduct" sequence="1" type="positive">
            <description>Test for proc getSchemaProduct</description>
                <inputs count="1">
                    <input name="no_of_scenarios">1</input>
                    <input name="targetConnection"></input>
                </inputs>
                    <outputs count="1">
                        <output name="schemaProductOut">CARERADIUS</output>
                    </outputs>
        </test>
        <test name="tcl_unit_GetOraDefTblSpace" sequence="1" type="positive">
        <!-- todo hard coding -->
            <description>Test for proc GetOraDefTblSpace</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="3">
                        <input name="no_of_scenarios">2</input>
                        <input name="connectionString1">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input>
                        <input name="connectionString2">MCDEVEL/MCDEVEL@cic-svr-db08-orcl</input>
                    </inputs>
                    <outputs count="2">
                        <output name="GetOraDefTblSpaceOut">USERS</output>
                        <output name="GetOraDefTblSpaceReturn">Unit Test for proc GetOraDefTblSpace Seq 1 Failed.</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaTriggerData" sequence="1" type="negative">
            <description> Unit test for getSchemaTriggerData proc</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="7">
                        <input name="no_of_scenarios">1</input>
                        <input name="getSchemaTriggerData_type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <!-- <input name="tdbh">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="server">cic-svr-db09-site</input>
                        <input name="schemaVersion">03000000</input>
                        <input name="tables1"/>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaTriggerData" sequence="2" type="positive">
            <description> Unit test for getSchemaTriggerData</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="8">
                        <input name="no_of_scenarios">2</input>
                        <input name="getSchemaTriggerData_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="targetConnection"/>
                        <!-- <input name="tdbh">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="tables1">AAC_ADVERSE_ACTION_CLASS</input>
                        <input name="tables2">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</input>
                    </inputs>
                    <outputs count="6">
                        <output name="USER_TRIGGERS_data1">{{{BEFORE EACH ROW} UPDATE {} {AAC_TGRB_U_01 BEFORE UPDATE ON AAC_ADVERSE_ACTION_CLASS FOR EACH ROW} {BEGIN IF(:new.AAC_RECORD_VERSION >= 0) THEN :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION +1; ELSE :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION ; END IF; END;}}}</output>
                        <output name="USER_TRIGGERS_header1">AAC_ADVERSE_ACTION_CLASS</output>
                        <output name="USER_TRIGGERS_key1">AAC_TGRB_U_01</output>
                        <output name="USER_TRIGGERS_data2">{{{BEFORE EACH ROW} UPDATE {} {AAC_TGRB_U_01 BEFORE UPDATE ON AAC_ADVERSE_ACTION_CLASS FOR EACH ROW} {BEGIN IF(:new.AAC_RECORD_VERSION >= 0) THEN :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION +1; ELSE :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION ; END IF; END;}}} {{{BEFORE EACH ROW} UPDATE {} {AAD_TGRB_U_01 BEFORE UPDATE ON AAD_ADB_ADDRESS_BOOK_ADDRESS FOR EACH ROW} {BEGIN IF(:new.AAD_RECORD_VERSION >= 0) THEN :new.AAD_RECORD_VERSION := :old.AAD_RECORD_VERSION +1; ELSE :new.AAD_RECORD_VERSION := :old.AAD_RECORD_VERSION ; END IF; END;}}}</output>
                        <output name="USER_TRIGGERS_header2">AAC_ADVERSE_ACTION_CLASS AAD_ADB_ADDRESS_BOOK_ADDRESS</output>
                        <output name="USER_TRIGGERS_key2">AAC_TGRB_U_01 AAD_TGRB_U_01</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSqlListMID" sequence="1" type="positive">
            <description>This tests the proc getSqlListMID</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <outputs count ="1">
                        <output name="expectedResult">DROP.CONSTRAINT DROP.INDEX</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSqlListDROP" sequence="1" type="positive">
            <description>This tests the proc getSqlListDROP</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <outputs count ="1">
                        <output name="expectedResult">DROP.COLUMN DROP.TABLE</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_deleteNonSysSpool" sequence="1" type="positive">
            <description>This tests the proc deleteNonSysSpool</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="0">
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_compareTextIndices" sequence="1" type="positive">
            <description>This tests the proc compareTextIndices</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="16">
                        <input name="totalCases">7</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleModel1">sampleModelTextInd1</input>
                        <input name="sampleTarget1">sampleTargetTextInd1</input>
                        <input name="sampleModel2">sampleTargetTextInd1</input>
                        <input name="sampleTarget2">sampleModelTextInd1</input>
                        <input name="sampleModel3">sampleModelTextInd2</input>
                        <input name="sampleTarget3">sampleTargetTextInd1</input>
                        <input name="sampleModel4">sampleTargetTextInd1</input>
                        <input name="sampleTarget4">sampleModelTextInd2</input>
                        <input name="sampleModel5">sampleModelTextInd5</input>
                        <input name="sampleTarget5">sampleTargetTextInd5</input>
                        <input name="sampleModel6">sampleModelTextInd5</input>
                        <input name="sampleTarget6">sampleTargetTextInd6</input>
                        <input name="sampleModel7">sampleModelTextInd1</input>
                        <input name="sampleTarget7">sampleModelTextInd1</input>
                    </inputs>
                    <outputs count="7">
                        <output name="sampleResults1">sampleResultsTextInd1_3_2</output>
                        <output name="sampleResults2">sampleResultsTextInd2</output>
                        <output name="sampleResults3">sampleResultsTextInd3</output>
                        <output name="sampleResults4">sampleResultsTextInd4_3_2</output>
                        <output name="sampleResults5">sampleResultsTextInd5</output>
                        <output name="sampleResults6">sampleResultsTextInd6</output>
                        <output name="sampleResults7">sampleResultsTextInd7</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaTextIndexData" sequence="2" type="positive">
            <description> Unit test for getSchemaTextIndexData proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="no_of_scenarios">2</input>
                        <input name="getSchemaTextIndexData_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="targetConnection"/>
                        <!-- <input name="tdbh">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="type1">TEXT_INDEXES</input>
                        <input name="tables1">AUP_AUTHORIZATION_PROFILE</input>
                        <input name="type2">TEXT_INDEXES</input>
                        <input name="tables2">AUP_AUTHORIZATION_PROFILE CDI_CLINICAL_DATA_ITEM</input>
                    </inputs>
                    <outputs count="6">
                        <output name="TEXT_INDEXES_data1">{{AUP_DESC DOMAIN CTXSYS.CONTEXT {SYNC (ON COMMIT) stoplist CTXSYS.EMPTY_STOPLIST STORAGE TEXT_STORAGE}}}</output>
                        <output name="TEXT_INDEXES_header1">AUP_AUTHORIZATION_PROFILE</output>
                        <output name="TEXT_INDEXES_key1">AUP_TEXT_INDEX_01</output>
                        <output name="TEXT_INDEXES_data2">{{AUP_DESC DOMAIN CTXSYS.CONTEXT {SYNC (ON COMMIT) stoplist CTXSYS.EMPTY_STOPLIST STORAGE TEXT_STORAGE}}} {{CDI_DESC DOMAIN CTXSYS.CONTEXT {SYNC (ON COMMIT) STOPLIST CTXSYS.EMPTY_STOPLIST STORAGE TEXT_STORAGE}}}</output>
                        <output name="TEXT_INDEXES_header2">AUP_AUTHORIZATION_PROFILE CDI_CLINICAL_DATA_ITEM</output>
                        <output name="TEXT_INDEXES_key2">AUP_TEXT_INDEX_01 CDI_TEXT_INDEX_01</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaTriggers" sequence="1" type="positive">
            <description> Unit test for getSchemaTriggers proc</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="6">
                        <input name="no_of_scenarios">2</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="getSchemaTriggers_type">positive</input>
                        <!-- <input name="tdbh">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">03030000</input>
                        <input name="Results"/>
                        <input name="tables1">ADR_ADDRESS</input>
                        <input name="tables2">AAC_ADVERSE_ACTION_CLASS</input>
                    </inputs>
                    <outputs count="1">
                        <output name="getSchemaTriggers_val2">{{AAC_ADVERSE_ACTION_CLASS} {AAC_TGRB_U_01} {BEFORE EACH ROW} {UPDATE} {} {AAC_TGRB_U_01 BEFORE UPDATE ON AAC_ADVERSE_ACTION_CLASS FOR EACH ROW } { BEGIN IF(:new.AAC_RECORD_VERSION >= 0) THEN :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION +1; ELSE :new.AAC_RECORD_VERSION := :old.AAC_RECORD_VERSION ; END IF; END; }}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSchemaTriggers" sequence="2" type="negative">
            <description> Unit test for getSchemaTriggers proc when invalid table name is passed</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="5">
                        <input name="no_of_scenarios">1</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="getSchemaTriggers_type">negative</input>
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="tables1">AAC_ADVERSE</input>
                        <input name="Results"/>
                    </inputs>
                    <outputs count="1">
                        <output name="getSchemaTriggers_val1"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSqlListMAP" sequence="1" type="positive">
            <description>This tests the proc getSqlListMAP</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <outputs count ="1">
                        <output name="expectedResult">MAPPING</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSqlListPOST" sequence="1" type="positive">
            <description>This tests the proc getSqlListPOST</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <outputs count ="1">
                        <output name="expectedResult">ADD.CONSTRAINT ADD.CONSTRAINT.RECREATE ADD.TRIGGER ADD.TRIGGER.RECREATE ADD.TEXT_INDEX ADD.RECREATE.TEXT_INDEX ADD.PROCEDURE ADD.PROCEDURE.RECREATE DROP.SEQUENCE ENABLE.CONSTRAINT VALIDATE.CONSTRAINT</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSqlListPRE" sequence="1" type="positive">
            <description>This tests the proc getSqlListPRE</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <outputs count ="1">
                        <output name="expectedResult">DROP.CONSTRAINT.RECREATE DROP.CONSTRAINT DROP.INDEX DROP.INDEX.RECREATE REVIEW.CUSTOM_INDEX DROP.TRIGGER DROP.TRIGGER.RECREATE DROP.TEXT_INDEX DROP.RECREATE.TEXT_INDEX DROP.PROCEDURE DROP.PROCEDURE.RECREATE RENAME.COLUMN RENAME.INDEX RENAME.CONSTRAINT RENAME.TABLE MODIFY.COLUMN ADD.TABLE ADD.COLUMN ADD.INDEX ADD.RECREATE.INDEX MOVE.INDEX ADD.SEQUENCE</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_testOracleScriptLogon" sequence="1" type="positive">
            <description>This tests the proc testOracleScriptLogon</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <!-- <input name="connectionstring">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="type">positive</input>
                    </inputs>
                    <outputs count="1">
                        <!-- <output name="output1">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</output> -->
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getScriptHistory" sequence="1" type="positive">
            <description>This tests the proc getScriptHistory</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="1">
                        <output name="output">4</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getScriptProduct" sequence="1" type="positive">
            <description>This tests the proc getScriptProduct</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">4</input>
                        <input name="sqlfileInput1">CR03000000_Build_01.86_INTER.sql</input>
                        <input name="sqlfileInput2">CareAdvise020000.sql</input>
                        <input name="sqlfileInput3">M201.86_INTER.sql</input>
                        <input name="sqlfileInput4">01.86_INTER.sql</input>
                    </inputs>
                    <outputs count="4">
                        <output name="getScriptProductOut1">CR</output>
                        <output name="getScriptProductOut2">Car</output>
                        <output name="getScriptProductOut3">M2</output>
                        <output name="getScriptProductOut4"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSHSscripts" sequence="1" type="positive">
            <description>This tests the proc getSHSscripts</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <!-- <input name="connectionString">UNIT_CR1618/UNIT_CR1618@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="0">
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCodeVals" sequence="1" type="positive">
            <description>This tests the proc getCodeVals-positive cases</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="1">
                        <input name="testType">POSITIVE</input>
                        <input name="totalCases">1</input>
                        <input name="sampleNamesFile1">$testDataDir/CR0302_NAMES_SAMPLE_634087.txt</input>
                        <input name="sampleValuesFile1">$testDataDir/CR0302_VALUES_SAMPLE_634087.txt</input>
                        <input name="sampleWhereFile1">$testDataDir/CR0302_WHERE.txt</input>
                        <input name="sampleclienttable1">ACA_AUTH_CONDITION_CATEGORY</input>
                    </inputs>
                    <outputs count="1">
                    <output name="sampleResults1">{ACG_APPEAL_CATEGORY ACG_CODE BEP} {ACG_APPEAL_CATEGORY ACG_CODE CMG} {ACG_APPEAL_CATEGORY ACG_CODE CMS} {ACG_APPEAL_CATEGORY ACG_CODE CRS} {ACG_APPEAL_CATEGORY ACG_CODE DNT} {ACG_APPEAL_CATEGORY ACG_CODE ENRL} {ACG_APPEAL_CATEGORY ACG_CODE FIN} {ACG_APPEAL_CATEGORY ACG_CODE MBR} {ACG_APPEAL_CATEGORY ACG_CODE MDB} {ACG_APPEAL_CATEGORY ACG_CODE NMG} {ACG_APPEAL_CATEGORY ACG_CODE ODP} {ACG_APPEAL_CATEGORY ACG_CODE OTH} {ACG_APPEAL_CATEGORY ACG_CODE QOC} {ACG_APPEAL_CATEGORY ACG_CODE QOS} {ACG_APPEAL_CATEGORY ACG_CODE RCP} {ACG_APPEAL_CATEGORY ACG_CODE RXB}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCodeVals" sequence="2" type="negative">
            <description>This tests the proc getCodeVals-negative cases</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="testType">NEGATIVE</input>
                            <input name="totalCases">2</input>
                            <input name="sampleNamesFile1">$testDataDir/NONEXISTANT_NAMES_634087.txt</input>
                            <input name="sampleValuesFile1">$testDataDir/CR0301_VALUES_SAMPLE_634087.txt</input>
                            <input name="sampleWhereFile1">$testDataDir/CR0302_WHERE.txt</input>
                            <input name="sampleclienttable1">ACA_AUTH_CONDITION_CATEGORY</input>
                            <input name="sampleNamesFile2">$testDataDir/CR0301_NAMES_SAMPLE_634087.txt</input>
                            <input name="sampleValuesFile2">$testDataDir/NONEXISTANT_VALUES_634087.txt</input>
                            <input name="sampleWhereFile2">$testDataDir/CR0302_WHERE.txt</input>
                            <input name="sampleclienttable2"></input>
                        </inputs>
                        <outputs count="2">
                            <output name="sampleResults1"/>
                            <output name="sampleResults2"/>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddTrigger" sequence="1" type="positive">
            <description> Unit test for processAddTrigger</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">3</input>
                        <input name="caseType">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1">AAN_ALERT_ACTION AAN_TGRB_U_01  {{BEFORE EACH ROW} UPDATE {} {AAN_TGRB_U_01 BEFORE UPDATE ON AAN_ALERT_ACTION FOR EACH ROW} {B}}</input>
                        <input name="value2"/>
                        <input name="value3">AAN_ALERT_ACTION AAN_CUSTOMETRIGGER  {{BEFORE EACH ROW} UPDATE {} {AAN_CUSTOMETRIGGER BEFORE UPDATE ON AAN_ALERT_ACTION FOR EACH ROW} {BEGIN IF(:new.AAN_RECORD_VERSION >= 0) THEN null END IF; END;}}</input>
                        <input name="type">ADD.TRIGGERS</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">{exec LANDA_CONVERSION.CREATE_RECORD_VERSION_TRIGGER('AAN_ALERT_ACTION');}</output>
                        <output name="expected_Result2">{exec LANDA_CONVERSION.CREATE_TRIGGER ('','','');}</output>
                        <output name="expected_Result3">{exec LANDA_CONVERSION.CREATE_TRIGGER ('AAN_CUSTOMETRIGGER BEFORE UPDATE ON AAN_ALERT_ACTION FOR EACH ROW','','BEGIN IF(:new.AAN_RECORD_VERSION >= 0) THEN null END IF; END;');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddTrigger" sequence="1" type="negative">
            <description> Unit test for processAddTrigger when ADD.Tridders does not exist in RESULTS array</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">1</input>
                        <input name="caseType">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - ADD.TRIGGERS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getCodesInModel" sequence="1" type="positive">
            <description>This tests the proc getCodesInModel</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="7">
                        <input name="totalCases">2</input>
                        <input name="tableName1">ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="columnName1">ACA_CODE</input>
                        <input name="sampleValuesFile1">$testDataDir/CR0301_VALUES_SAMPLE_634087.txt</input>
                        <input name="tableName2">ACA_AUTH_CONDITION_CATEGORY</input>
                        <input name="columnName2">ACA_CODE</input>
                        <input name="sampleValuesFile2">$testDataDir/SampleValuesHeaderOnly_634087.txt</input>
                    </inputs>
                    <outputs count="2">
                        <output name="sampleResults1">{ACA_AUTH_CONDITION_CATEGORY ACA_CODE }</output>
                        <output name="sampleResults2">{ACA_AUTH_CONDITION_CATEGORY ACA_CODE }</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getDbDate" sequence="1" type="positive">
            <description>Unit test for proc getDBDate</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <!-- <input name="database">UNIT_CR2430/UNIT_CR2430@cic-svr-db08-orcl</input> -->
                        <!-- <input name="dbh">UNIT_CR2430/UNIT_CR2430@cic-svr-db08-orcl</input> -->
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_parse_column" sequence="1" type="positive">
            <description>This tests the proc parse_column</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">4</input>
                        <input name="columnIn1">AAC_RECORD_VERSION#NUMBER!22!10!0!5!0</input>
                        <input name="columnIn2">AAN_RECORD_STATUS#VARCHAR2!1!!!3!</input>
                        <input name="columnIn3">AAN_CREATE_DATE#DATE!7!!!6!</input>
                        <input name="columnIn4">AAN_CREATE_DATE#DATE</input>
                    </inputs>
                    <outputs count="4">
                        <output name="parse_columnOut1">AAC_RECORD_VERSION NUMBER!22!10!0!5!0 NUMBER(10);</output>
                        <output name="parse_columnOut2">AAN_RECORD_STATUS VARCHAR2!1!!!3! VARCHAR2(1);</output>
                        <output name="parse_columnOut3">AAN_CREATE_DATE DATE!7!!!6! DATE;</output>
                        <output name="parse_columnOut4">AAN_CREATE_DATE DATE DATE;</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_parse_clause" sequence="1" type="positive">
            <description>This tests the proc parse_clause</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="4">
                        <input name="no_of_scenarios">3</input>
                        <input name="columnIn1">NUMBER 22 10 0 5 0</input>
                        <input name="columnIn2">VARCHAR2 1 {} {} 3 {}</input>
                        <input name="columnIn3">DATE 7 {} {} 6 {}</input>
                    </inputs>
                    <outputs count="3">
                        <output name="parse_clauseOut1">NUMBER(10)</output>
                        <output name="parse_clauseOut2">VARCHAR2(1)</output>
                        <output name="parse_clauseOut3">DATE</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_get_Rtargets" sequence="1" type="positive">
            <description>This tests the proc get_Rtargets</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="totalCases">3</input>
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="sampleDataFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="sampleArray1">SampleGetR1</input>
                        <input name="sampleArray2">SampleGetR2</input>
                        <input name="sampleArray3">SampleGetR1</input>
                        <input name="rConstraint1">SCN_PRIMARY_KEY</input>
                        <input name="rConstraint2">TPR_PRIMARY_KEY</input>
                        <input name="rConstraint3">SBR_PRIMARY_KEY</input>
                    </inputs>
                    <outputs count="3">
                        <output name="getRtargetRes1">SCN_SCP_SECTION SCN_PRIMARY_KEY {{SCN_UID 1}}</output>
                        <output name="getRtargetRes2">TPR_TASK_PRIORITY TPR_PRIMARY_KEY {{TPR_CODE 1}}</output>
                        <output name="getRtargetRes3">SBR_SURVEY_BUILDER SBR_PRIMARY_KEY {{SBR_UID 1}}</output>

                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getTargetDriverRow" sequence="1" type="positive">
            <description>This tests the proc getTargetDriverRow</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                    <input name="sampleAutoCon1">$testDataDir/AutoConversion_635395_1.txt</input>
                    <input name="sampleAutoCon2">$testDataDir/AutoConversion_635395_2.txt</input>
                    <input name="sampleVer1">01.06.00</input>
                    <input name="sampleVer2">01.05.00</input>
                    <input name="sampleAutoCon3">$testDataDir/NonExistantAutoCon.txt</input>
                </inputs>
                <outputs count="5">
                    <output name="targetRowRes1">3 CR010700.sql 01.07.00 CR Mod170</output>
                    <output name="targetRowRes2">2 CR010600.sql 01.06.00 CR Mod160</output>
                    <output name="targetRowRes3">1 CR010500.sql 01.05.00 CR Mod150</output>
                    <output name="targetRowRes4"></output>
                    <output name="targetRowRes5">\$sampleAutoCon3 not found.
Check your spelling and try again.</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getCurrModDir" sequence="1" type="positive">
            <description>Unit test for proc p_getCurrModDir</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="driverFile1">AutoConversion.txt</input>
                        <input name="currentVersion1">02.04.06.01</input>
                        <input name="shortVersion1"/>
                        <input name="driverFile2"/>
                        <input name="currentVersion2"/>
                        <input name="shortVersion2">2461</input>
                    </inputs>
                    <outputs count="1">
                        <output name="modelDir">Mod2461</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getSHSupdate" sequence="1" type="positive">
            <description>This tests the proc getSHSupdate</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="script_name">sysDataUpdate_11181146.sql</input>
                        <input name="oldversion"></input>
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                    </inputs>
                    <outputs count="1">
                    <output name="getSHSupdateOut">UPDATE  SHS_SCHEMA_HISTORY
    SET SHS_VERSION_OLD = \'\',
    SHS_RESULTS = \'Successful\',
    SHS_LAST_UPDATE_DATE = sysdate,
    SHS_USR_UID_UPDATED_BY = -4
    where SHS_SQL_SCRIPT_NAME = \'sysDataUpdate_11181146.sql\'</output>
                        <output name="getSHSupdateReturn">Unit Test for proc getSHSupdate Failed</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getTargetModDir" sequence="1" type="positive">
            <description>Unit test for proc p_getTargetModDir</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="4">
                        <input name="driverFile1">$testDataDir/AutoConversion1.txt</input>
                        <input name="driverFile2">$testDataDir/AutoConversioon.txt</input>
                        <input name="shortTargetVersion1"/>
                        <input name="shortTargetVersion2">3100</input>
                    </inputs>
                    <outputs count="2">
                        <output name="targetmodelDir1">Mod170</output>
                        <output name="targetmodelDir2">Mod3100</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_makeDir" sequence="1" type="positive">
            <description> Unit test for makeDir proc</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="directory">testdata/testMakeDirFolder</input>
                    </inputs>
                    <outputs count="1">
                        <output name="error1">testdata/testMakeDirFile exists, but is not a directory.  Cannot create directory testdata/testMakeDirFile</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getResultNames" sequence="1" type="positive">
            <description>This tests the proc getResultNames</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <outputs count ="1">
                        <output name="expected_result">ADD.TABLES
RENAME.TABLES
ADD.COLUMNS
RENAME.COLUMNS
MODIFY.COLUMNS
DROP.CONSTRAINTS
DROP.INDEXS
ADD.INDEXS
RENAME.INDEXS
RECREATE.INDEXS
MOVE.INDEXS
REVIEW.CUSTOM_INDEXS
ADD.SEQUENCES
RENAME.CONSTRAINTS
DROP.SEQUENCES
RECREATE.CONSTRAINTS
ADD.CONSTRAINTS
ENABLE/VALIDATE.CONSTRAINTS
ADD.TRIGGERS
ADD.RECREATE
DROP.TRIGGERS
RECREATE.TRIGGERS
ADD.PROCEDURES
DROP.PROCEDURES
RECREATE.PROCEDURES
ADD.TEXT_INDEXS
DROP.TEXT_INDEXS
RECREATE.TEXT_INDEXS
DROP.TABLES
DROP.COLUMNS
number_of_changes
chg_precision_lst</output>
                </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddIndex" sequence="1" type="positive">
            <description> Unit test for processAddIndex</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="9">
                        <input name="no_of_scenarios">3</input>
                        <input name="processAddIndex_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="type">ADD.INDEXS</input>
                        <input name="sampleRes1">sampleRESULTS635814_01</input>
                        <input name="sampleRes2">sampleRESULTS635814_02</input>
                        <input name="sampleRes3">sampleRESULTS635814_03</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1">{LANDA_CONVERSION.ADD_INDEX ('ADC_PRIMARY_KEY','ADC_DECISION_REASON','ADC_CODE','MAX2_INDEX_S_TS');}</output>
                        <output name="expected_Result2">{}</output>
                        <output name="expected_Result3">{LANDA_CONVERSION.ADD_INDEX ('ADC_PRIMARY_KEY','ADC_DECISION_REASON','ADC_CODE','MAX2_INDEX_S_TS');} {LANDA_CONVERSION.ADD_INDEX ('AET_INDEX_01','AET_EFFECTUATION_TYPE','AET_DESC','MAX2_INDEX_S_TS');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddIndex" sequence="2" type="negative">
            <description> Unit test for processAddIndex</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">1</input>
                        <input name="processAddIndex_type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="type">ADD.INDEXS</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">type - ADD.INDEXS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddTable" sequence="1" type="positive">
            <description> Unit test for processAddTable</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="13">
                        <input name="no_of_scenarios">2</input>
                        <input name="processAddTable_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1">AAN_ALERT_ACTION MAX2_SHA_TS</input>
                        <input name="value_typeCol1">AAN_ALERT_ACTION AAN_CODE {VARCHAR2 6 {} {} 1 {}}</input>
                        <input name="type_Tables1">ADD.TABLES</input>
                        <input name="type_typeCol1">ADD.TAB_COLS</input>
                        <input name="value2"/>
                        <input name="value_typeCol2"/>
                        <input name="type_Tables2">ADD.TABLES</input>
                        <input name="type_typeCol2">ADD.TAB_COLS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{LANDA_CONVERSION.CREATE_TABLE ('AAN_ALERT_ACTION','MAX2_SHA_TS','AAN_CODE','VARCHAR2','(6)');}</output>
                        <output name="expected_Result2">{LANDA_CONVERSION.CREATE_TABLE ('','','','','');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>

        <test name="tcl_unit_processAddTable" sequence="2" type="negative">
            <description> Unit test for processAddTable</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">1</input>
                        <input name="processAddTable_type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">type - ADD.TABLES</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_getVersionModDirName" sequence="1" type="positive">
            <description>This tests the proc getVersionModDirName</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="11">
                        <input name="totalCases">5</input>
                        <input name="sampleVer1">01.05.01</input>
                        <input name="samplePath1">[pwd]</input>
                        <input name="sampleVer2">01.06.10</input>
                        <input name="samplePath2">[pwd]</input>
                        <input name="sampleVer3">99.99.00.00</input>
                        <input name="samplePath3">[pwd]</input>
                        <input name="sampleVer4">01.05.01</input>
                        <input name="samplePath4">./Models</input>
                        <input name="sampleVer5">01.05.01</input>
                        <input name="samplePath5">Skip</input>
                    </inputs>
                    <outputs count="5">
                        <output name="modRes1">Mod151</output>
                        <output name="modRes2">Mod1610</output>
                        <output name="modRes3"/>
                        <output name="modRes4">Mod</output>
                        <output name="modRes5">Mod151</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_isInfo" sequence="1" type="positive">
            <description>This tests the proc isInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="nameIn1">timeFormat</input>
                        <input name="nameIn2">WORKING_DIRECTORY</input>
                        <input name="nameIn3">copyright</input>
                        <input name="nameIn4">SupportContact</input>
                        <input name="nameIn5">hr</input>
                        <input name="nameIn6">HR</input>
                        <input name="nameIn7">_common_utilities_loaded</input>
                        <input name="nameIn8">SCRIPT_FILES_DIRECTORY</input>
                        <input name="nameIn9">MODEL_FILES_DIRECTORY</input>
                        <input name="nameIn10">dateFormat</input>
                    </inputs>
                    <outputs count="2">
                        <output name="isInfo_names"/>
                        <output name="isInfoOut1">1</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_isInfo" sequence="2" type="negative">
            <description>This tests the proc isInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="nameIn11">InvalidInput</input>
                    </inputs>
                    <outputs count="2">
                        <output name="isInfo_names">negative</output>
                        <output name="isInfoOut2">0</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddProcedure" sequence="1" type="positive">
            <description>This tests the proc processAddProcedure</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"></input>
                    <input name="type">ADD.PROCEDURES</input>
                    <input name="value">UDT_DROP_OBJECT CURRENT_USER {{PROCEDURE UDT_DROP_OBJECT\n\n  (p_object_name IN VARCHAR2, p_object_type IN VARCHAR2)\n\n  AUTHID CURRENT_USER\n\nAS\n\nBEGIN\n\n
  IF p_object_type = 'TABLE' THEN\n\n    EXECUTE IMMEDIATE 'DROP TABLE ' || p_object_name;\n\n  END IF;\n\n  IF p_object_type = 'SEQUENCE' THEN\n\n    EXECUTE IMMEDIATE 'DROP SEQUENCE ' || p_object_name;\n\n  END IF;\n\nEND;}}</input>
                </inputs>
                <outputs count ="1">
                    <output name="expected_result">{CREATE OR REPLACE PROCEDURE UDT_DROP_OBJECT (p_object_name IN VARCHAR2, p_object_type IN VARCHAR2) AUTHID CURRENT_USER AS BEGIN IF p_object_type = 'TABLE' THEN EXECUTE IMMEDIATE 'DROP TABLE ' || p_object_name; END IF; IF p_object_type = 'SEQUENCE' THEN EXECUTE IMMEDIATE 'DROP SEQUENCE ' || p_object_name; END IF; END;
/}</output>
                </outputs>
                </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddColumn" sequence="1" type="positive">
            <description> Unit test for processAddColumn proc </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="13">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="avalue1">ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_AP_YN {VARCHAR2 1 {} {} 13 N}</input>
                        <input name="bvalue1">{ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_GR_YN {VARCHAR2 1 {} {} 14 N}}</input>
                        <input name="cvalue1">{ACG_APPEAL_CATEGORY ACG_VALID_FOR_APPEALS_YN {VARCHAR2 1 {} {} 11 N}}</input>
                        <input name="dvalue1">{ACG_APPEAL_CATEGORY ACG_VALID_FOR_GRIEVANCES_YN {VARCHAR2 1 {} {} 12 N}}</input>
                        <input name="avalue2"/>
                        <input name="bvalue2"/>
                        <input name="cvalue2"/>
                        <input name="dvalue2"/>
                        <input name="type">ADD.COLUMNS</input>
                        <input name="processAddColumn">positive</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY','ACG_ALLOW_ALL_SECONDARY_AP_YN','VARCHAR2','(1)','N');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_GR_YN {VARCHAR2 1 {} {} 14 N}','','','');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_VALID_FOR_APPEALS_YN {VARCHAR2 1 {} {} 11 N}','','','');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_VALID_FOR_GRIEVANCES_YN {VARCHAR2 1 {} {} 12 N}','','','');}</output>
                        <output name="expected_Result2">{LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddColumn" sequence="2" type="negative">
            <description> Unit test for processAddColumn proc when blank value is passed </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value"/>
                        <input name="type">ADD.COLUMNS</input>
                        <input name="processAddColumn">negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - ADD.COLUMNS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getParams" sequence="1" type="positive">
            <description>This tests the proc p_getParams</description>
                <versions>
                    <version number="03030600" condition="ge">
                    <inputs count="10">
                        <input name="no_of_scenarios">4</input>
                        <input name="scenario_type">positive</input>
                        <input name="sampleVal1">0101 ab2 io10</input>
                        <input name="scriptName1">dbComapre</input>
                        <input name="sampleVal2">inputFile=$testDataDir/input_params.txt</input>
                        <input name="scriptName2">dbCompare</input>
                        <input name="sampleVal3">inputFile=$testDataDir/input_params.txt</input>
                        <input name="scriptName3">AutoScript</input>
                        <input name="sampleVal4"></input>
                        <input name="scriptName4">dbCompare</input>
                    </inputs>
                    <outputs count="4">
                        <output name="result1">0101 ab2 io10</output>
                        <output name="result2">Mod1234 CRPOOLXXX/CRPOOLXXX@db09 cert1234.txt</output>
                        <output name="result3">CRPOOLXXX/CRPOOLXXX@db09 AutoConversion.txt Y {} {}</output>
                        <output name="result4">Mod1234 CRPOOLXXX/CRPOOLXXX@db09 cert1234.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getParams" sequence="1" type="negative">
            <description>This tests the proc p_getParams</description>
                <versions>
                    <version number="03030600" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">3</input>
                        <input name="scenario_type">negative</input>
                        <input name="sampleVal1">inputFiles=$testDataDir/input_params.txt</input>
                        <input name="scriptName1">AutoScript</input>
                        <input name="sampleVal2"></input>
                        <input name="scriptName2">dbCompare</input>
                        <input name="sampleVal3">inputFile=$testDataDir/input_params_negative.txt</input>
                        <input name="scriptName3">AutoScript</input>
                    </inputs>
                    <outputs count="3">
                        <output name="result1">ERROR - Please pass parameter inputFile=fileName.txt</output>
                        <output name="result2">input_params.txt not found.
Check your spelling and try again.</output>
                        <output name="result3">Invalid argument list {A value needed for CARERADIUS_SCHEMA_NAME}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_interpose" sequence="1" type="positive">
            <description>This tests the proc p_interpose</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="10">
                        <input name="sampleVer1">02161209</input>
                        <input name="sampleVer2">0340350360</input>
                        <input name="sampleToken2">*</input>
                        <input name="sampleVer3">034035036</input>
                        <input name="sampleToken3">+</input>
                        <input name="sampleCount3">3</input>
                        <input name="sampleVer4"/>
                        <input name="sampleVer5">01190</input>
                        <input name="sampleVer6">01190</input>
                        <input name="sampleCount6">3</input>
                    </inputs>
                    <outputs count="6">
                        <output name="result1">02.16.12.09</output>
                        <output name="result2">03*40*35*03*60</output>
                        <output name="result3">034+035+036</output>
                        <output name="result4"/>
                        <output name="result5">invalid version to split: length of 5 does not divide evenly by 2</output>
                        <output name="result6">invalid version to split: length of 5 does not divide evenly by 3</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <!--test name="tcl_unit_processBackup1.1" sequence="1" type="positive">
                <description> Unit test for processBackup proc </description>
                <versions>
                    <version number="03010100" condition="ge">
                <inputs count="6">
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"></input>
                    <input name="value1">AML_AUTOMATED_MESSAGE_LOG AML_MEMBER_OPTION_SELECTED</input>
                    <input name="value2">AML_AUTOMATED_MESSAGE_LOG AML_MEMBER_RECEIVED_DATE</input>
                    <input name="type">DROP.COLUMNS</input>
                </inputs>
                <outputs count="1">
                    <output name="expected_Result">{LANDA_CONVERSION.BACKUP_COLUMN_DATA('AML_AUTOMATED_MESSAGE_LOG','AML_MEMBER_OPTION_SELECTED');} {LANDA_CONVERSION.BACKUP_COLUMN_DATA('AML_AUTOMATED_MESSAGE_LOG','AML_MEMBER_RECEIVED_DATE');}</output>
                </outputs>
                        </version>
                </versions>
        </test>
            <test name="tcl_unit_processBackup1.1" sequence="2" type="negative">
                <description> Unit test for processBackup proc when blank value is passed</description>
                <versions>
                    <version number="03010100" condition="ge">
                <inputs count="6">
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"></input>
                    <input name="value1"></input>
                    <input name="value2"></input>
                    <input name="type">DROP.COLUMNS</input>
                </inputs>
                <outputs count="1">
                    <output name="expected_Result">{LANDA_CONVERSION.BACKUP_COLUMN_DATA('','');} {LANDA_CONVERSION.BACKUP_COLUMN_DATA('','');}</output>
                </outputs>
            </test -->
        <test name="tcl_unit_processAddConstraint" sequence="1" type="positive">
            <description> Unit test for processAddConstraint</description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="9">
                        <input name="no_of_scenarios">2</input>
                        <input name="processAddConstraint_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1">ADC_DECISION_REASON ADC_NOT_NULL_01 ADC_CODE {C {} {} {} VALIDATED ENABLED}</input>
                        <input name="type1">ADD.CONSTRAINTS</input>
                        <input name="value2"/>
                        <input name="type2">ADD.CONSTRAINTS</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{LANDA_CONVERSION.ADD_NOT_NULL ('ADC_DECISION_REASON','ADC_CODE','ADC_NOT_NULL_01');}</output>
                        <output name="expected_Result2">{LANDA_CONVERSION.ADD_CONSTRAINT ('','','','');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddConstraint" sequence="1" type="Negative">
            <description> Unit test for processAddConstraint when ADD.CONSTRAINTS does not exist in RESULTS array</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="no_of_scenarios">1</input>
                        <input name="processAddConstraint_type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1"/>
                        <input name="type1">ADD.CONSTRAINTS</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">type - ADD.CONSTRAINTS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_splitat" sequence="1" type="positive">
            <description>This tests the proc p_splitat</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="totalCases">4</input>
                        <input name="sampleVer1">02161209</input>
                        <input name="sampleCount1">Skip</input>
                        <input name="sampleVer2">10340350360</input>
                        <input name="sampleCount2">3</input>
                        <input name="sampleVer3"/>
                        <input name="sampleCount3">3</input>
                        <input name="sampleVer4">ABCDEFG</input>
                        <input name="sampleCount4">Skip</input>
                    </inputs>
                    <outputs count="4">
                        <output name="result1">02 16 12 09</output>
                        <output name="result2">103 403 503 60</output>
                        <output name="result3"/>
                        <output name="result4">AB CD EF G</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_pad_version" sequence="1" type="positive">
            <description>This tests the proc p_pad_version</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="totalCases">4</input>
                        <input name="sampleVer1">1.5.03</input>
                        <input name="sampleVer2">0340350360</input>
                        <input name="sampleVer3"/>
                        <input name="sampleVer4">.1.15.3.</input>
                    </inputs>
                    <outputs count="4">
                        <output name="result1">01 05 03</output>
                        <output name="result2">0340350360</output>
                        <output name="result3"/>
                        <output name="result4">0 01 15 03 0</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddSequence" sequence="1" type="positive">
            <description>This tests the proc processAddSequence</description>
                <versions>
                    <version number="03000000" condition="invalid">
                    <inputs count="2">
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="type">ADD.SEQUENCES</input>
                        <input name="value">TMI_TCM_MISSING_INFORMATION TMI_SEQUENCE TMI_UID 1 99999999 1 10001 NOCACHE NOCYCLE</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_result">{LANDA_CONVERSION.CREATE_SEQUENCE ('TMI_SEQUENCE','1','1','9999999999');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_unpad_version" sequence="1" type="positive">
            <description>This tests the proc p_unpad_version</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="totalCases">6</input>
                        <input name="sampleVer1">0002.0014</input>
                        <input name="sampleVer2">100.3400</input>
                        <input name="sampleVer3"/>
                        <input name="sampleVer4">01.02.03.04.05</input>
                        <input name="sampleVer5">1.2.3.4.5</input>
                        <input name="sampleVer6">05.00.15</input>
                    </inputs>
                    <outputs count="6">
                        <output name="result1">2 14</output>
                        <output name="result2">100 3400</output>
                        <output name="result3"/>
                        <output name="result4">1 2 3 4 5</output>
                        <output name="result5">1 2 3 4 5</output>
                        <output name="result6">5 0 15</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_makeTypeDDL" sequence="1" type="positive">
            <description>This tests the proc makeTypeDDL</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="7">
                        <input name="sampleDataFileIn">$testDataDir/Array_Input_Output.txt</input>
                        <input name="typeIn1">MAPPING</input>
                        <input name="typeIn2">DROP.COLUMN</input>
                        <input name="typeIn3">DROP.CONSTRAINT</input>
                        <input name="typeIn4">ADD.PROCEDURE</input>
                        <input name="typeIn5">ADD.COLUMN</input>
                        <input name="typeIn6">ADD.CONSTRAINT</input>
                    </inputs>
                    <outputs count="7">
                        <output name="makeTypeDDL_names">positive</output>
                        <output name="makeTypeDDLOut1">makeTypeDDLList1_3_2</output>
                        <output name="makeTypeDDLOut2">makeTypeDDLList2_3_2</output>
                        <output name="makeTypeDDLOut3">makeTypeDDLList3_3_2</output>
                        <output name="makeTypeDDLOut4">makeTypeDDLList4</output>
                        <output name="makeTypeDDLOut5">makeTypeDDLList5_3_2</output>
                        <output name="makeTypeDDLOut6">makeTypeDDLList6_3_2</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_makeTypeDDL" sequence="2" type="negative">
            <description>This tests the proc makeTypeDDL</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="sampleDataFileIn">$testDataDir/Array_Input_Output.txt</input>
                        <input name="typeIn7">UNKNOWN.TYPE</input>
                    </inputs>
                    <outputs count="2">
                        <output name="makeTypeDDL_names">negative</output>
                        <output name="makeTypeDDLOut7">can\'t read \\"resultSQL(UNKNOWN.TYPE)\\": no such element in array</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddSeqEntry" sequence="1" type="positive">
            <description>This tests the proc processAddSeqEntry</description>
            <versions>
                <version number="03000000" condition="invalid">
                <inputs count="2">
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"/>
                    <input name="type">INSERT.SEQS</input>
                    <input name="value">{MAP_MEM_APPEAL MAP_CASE_1_SEQUENCE {MAP_CASE_NUMBER 1 9999999999 1 10001 20 NOCYCLE}} {MAP_MEM_APPEAL MAP_CASE_2_SEQUENCE {MAP_CASE_NUMBER_2 1 9999999999 1 10001 20 NOCYCLE}} {MAP_MEM_APPEAL MAP_CASE_2_SEQUENCE {MAP_CASE_NUMBER_2 1 9999999999 1 10001 20 NOCYCLE}}</input>
                </inputs>
                <outputs count ="1">
                    <output name="expected_result">{LANDA_CONVERSION.LANDA_INSERT ('INSERT INTO SEQ_SEQUENCE (SEQ_NAME,SEQ_TARGET_COLUMN,SEQ_SITE_VALUE_BEGIN,SEQ_RECORD_VERSION,SEQ_USR_UID_CREATED_BY,SEQ_CREATE_DATE) values (''MAP_MEM_APPEAL MAP_CASE_2_SEQUENCE {MAP_CASE_NUMBER_2 1 9999999999 1 10001 20 NOCYCLE}'',''MAP_MEM_APPEAL'',''MAP_CASE_2_SEQUENCE'',0,-4,sysdate)');}</output>
                </outputs>
                </version>
            </versions>
        </test>
        <!-- KNOWN BUG: cannot reconcile test input values to what is here.
        <test name="tcl_unit_processAddColumn" sequence="3" type="positive">
            <description> Unit test for processAddColumn proc </description>
            <versions>
                <version number="03010100" condition="ge">
                <inputs count="5">
                    <input name="processAddColumn">positive</input>
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"/>
                    <input name="value1">ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_AP_YN {VARCHAR2 1 {} {} 13 N}</input>
                    <input name="value2">{ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_GR_YN {VARCHAR2 1 {} {} 14 N}}</input>
                    <input name="value3">{ACG_APPEAL_CATEGORY ACG_VALID_FOR_APPEALS_YN {VARCHAR2 1 {} {} 11 N}}</input>
                    <input name="value4">{ACG_APPEAL_CATEGORY ACG_VALID_FOR_GRIEVANCES_YN {VARCHAR2 1 {} {} 12 N}}</input>
                    <input name="type">ADD.COLUMNS</input>
                </inputs>
                <outputs count="1">
                    <output name="expected_Result">{LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY','ACG_ALLOW_ALL_SECONDARY_AP_YN','VARCHAR2','(1)','N');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_GR_YN {VARCHAR2 1 {} {} 14 N}','','','');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_VALID_FOR_APPEALS_YN {VARCHAR2 1 {} {} 11 N}','','','');} {LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY ACG_VALID_FOR_GRIEVANCES_YN {VARCHAR2 1 {} {} 12 N}','','','');}</output>
                </outputs>
                </version>
            </versions>
        </test> -->
        <test name="tcl_unit_processAddColumn" sequence="4" type="negative">
            <description> Unit test for processAddColumn proc when blank value is passed </description>
            <versions>
                <version number="03010100" condition="ge">
                <inputs count="5">
                    <input name="processAddColumn">negative</input>
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"/>
                    <input name="value1"/>
                    <input name="value2"/>
                    <input name="value3"/>
                    <input name="value4"/>
                    <input name="type">ADD.COLUMNS</input>
                </inputs>
                <outputs count="1">
                    <output name="expected_error">{LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');} {LANDA_CONVERSION.ADD_COLUMN ('','','','');}</output>
                </outputs>
                </version>
            </versions>
        </test>
        <test name="tcl_unit_processAddColumn" sequence="5" type="negative">
            <description> Unit test for processAddColumn proc when blank value is passed </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                        <input name="processAddColumn">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value"/>
                        <input name="type">ADD.COLUMNS</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - ADD.COLUMNS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_padTo" sequence="1" type="positive">
            <description>This tests the proc p_padTo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="sampleVer1">9</input>
                        <input name="sampleVer2">3</input>
                        <input name="sampleCount2">3</input>
                        <input name="sampleVer3">24</input>
                        <input name="sampleCount3">4</input>
                        <input name="sampleChar3">+</input>
                        <input name="sampleVer4">34</input>
                        <input name="sampleCount4">1</input>
                    </inputs>
                    <outputs count="4">
                        <output name="result1">09</output>
                        <output name="result2">003</output>
                        <output name="result3">++24</output>
                        <output name="result4">34</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processDifferences21.1" sequence="1" type="positive">
            <description> Unit test for processDifferences2</description>
                <versions>
                <version number="03020000" condition="ge">
                    <inputs count="30">
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"></input>
                    <input name="inputNames">add_Column drop_constraints add_constraints drop_indexes drop_Trigger drop_TextIndexs drop_Sequence rename_Column rename_Index rename_Constraints rename_Table modify_Column add_Index move_Index add_Sequence add_Trigger add_TextIndex add_Procedure drop_Column drop_Table add_Table</input>
                    <input name="add_Column">Result ADD.COLUMNS {ACG_APPEAL_CATEGORY ACG_ALLOW_ALL_SECONDARY_AP_YN {VARCHAR2 1 {} {} 13 N}}</input>
                    <input name="drop_constraints">Result DROP.CONSTRAINTS {ADC_DECISION_REASON ADC_NOT_NULL_01 ADC_CODE {C {} {} {} VALIDATED ENABLED}}</input>
                    <input name="add_constraints">Result ADD.CONSTRAINTS TCP_TCM_PROCEDURE TCP_NOT_NULL_01 TCP_TCM_UID {C {} {} {} VALIDATED ENABLED}</input>
                    <input name="recreate_constraints">Result RECREATE.CONSTRAINTS {TCP_TCM_PROCEDURE TCP_PRIMARY_KEY TCP_UID {P {} TCP_PRIMARY_KEY {} VALIDATED ENABLED}}</input>
                    <input name="drop_indexes">Result DROP.INDEXS {SBR_SURVEY_BUILDER SBI_INDEX_TEMP SBR_CREATE_DATE MAX2_INDEX_H_TS}</input>
                    <input name="recreate_Index">Result RECREATE.INDEXS {SBR_SURVEY_BUILDER SBR_INDEX_01 SBR_SCORE_HIGH_TSL_UID MAX2_INDEX_H_TS {SBR_SUSPEND_TSL_UID MAX2_INDEX_S_TS}}</input>
                    <input name="drop_Trigger">Result DROP.TRIGGERS {CTY_CONTACT_TYPE CTY_TGRB_U_01}</input>
                    <input name="drop_TextIndexs">Result DROP.TEXT_INDEXS {CTY_CONTACT_TYPE CTY_TGRB_U_01}</input>
                    <input name="drop_Sequence">Result DROP.SEQUENCES PMA_SEQUENCE</input>
                    <input name="rename_Column">Result RENAME.COLUMNS</input>
                    <input name="rename_Index">Result RENAME.INDEXS {SBR_SURVEY_BUILDER SBR_INDEX_TEMP SBR_CREATE_DATE}</input>
                    <input name="rename_Constraints">Result RENAME.CONSTRAINTS</input>
                    <input name="rename_Table">Result RENAME.TABLES {AAN_ALERT_ACTION MAX2_SHA_TS}</input>
                    <input name="add_Table">Result ADD.TABLES {AAN_ALERT_ACTION MAX2_SHA_TS}</input>
                    <input name="value_typeCol">AAN_ALERT_ACTION AAN_CODE {VARCHAR2 6 {} {} 1 {}}</input>
                    <input name="modify_Column">Result MODIFY.COLUMNS {CDI_CLINICAL_DATA_ITEM CDI_CODE {VARCHAR2 15 {} {} 1 {}} {VARCHAR2 6 {} {} 1 {}}}</input>
                    <input name="add_Index">Result ADD.INDEXS {SBR_SURVEY_BUILDER SBI_INDEX_TEMP SBR_CREATE_DATE MAX2_INDEX_H_TS}</input>
                    <input name="move_Index">Warning MOVE.INDEXS {AUM_INDEX_03 MAX2_INDEX_S_TS}</input>
                    <input name="add_Sequence">Result ADD.SEQUENCES {MAP_MEM_APPEAL MAP_CASE_1_SEQUENCE {MAP_CASE_NUMBER 1 9999999999 1 10001 20 NOCYCLE}}</input>
                    <input name="mapping">Result INSERT.SEQS</input>
                    <input name="add_Trigger">Result ADD.TRIGGERS {ADC_DECISION_REASON ADC_TGRB_U_01 {{BEFORE EACH ROW} UPDATE {} {ADC_TGRB_U_01 BEFORE UPDATE ON ADC_DECISION_REASON FOR EACH ROW} {BEGIN IF(:new.ADC_RECORD_VERSION >= 0) THEN :new.ADC_RECORD_VERSION := :old.ADC_RECORD_VERSION +1; ELSE :new.ADC_RECORD_VERSION := :old.ADC_RECORD_VERSION ; END IF; END;}}}</input>
                    <input name="add_TextIndex">Result ADD.TEXT_INDEXS {CDI_CLINICAL_DATA_ITEM CDI_TEXT_INDEX_01 {CDI_DESC {} {} STOPLIST}}</input>
                    <input name="add_Procedure">Result ADD.PROCEDURES {UDT_DROP_OBJECT DEFINER {{procedure UDT_DROP_OBJECT\n\n  (p_object_name in varchar2, p_object_type in varchar2)\n\nas\n\nbegin\n\n  if p_object_type = 'TABLE' then\n\n    execute immediate 'drop table ' || p_object_name;\n\n  end if;\n\n  if p_object_type = 'SEQUENCE' then\n\n    execute immediate 'drop sequence ' || p_object_name;\n\n  end if;\n\nend;}}}</input>
                    <!--input name="enable_Constraint">Warning ENABLE.CONSTRAINTS</input-->
                    <!--input name="validate_Constraint">Warning VALIDATE.CONSTRAINTS</input-->
                    <input name="drop_Column">Result DROP.COLUMNS {AML_AUTOMATED_MESSAGE_LOG AML_MEMBER_OPTION_SELECTED}</input>
                    <input name="drop_Table">Result DROP.TABLES {CTY_CONTACT_TYPE MAX2_SHA_TS}</input>
                </inputs>
                <outputs count="27">
                    <output name="outputNames"></output>
                    <output name="add_Column_out">{exec LANDA_CONVERSION.ADD_COLUMN ('ACG_APPEAL_CATEGORY','ACG_ALLOW_ALL_SECONDARY_AP_YN','VARCHAR2','(1)','N');}</output>
                    <output name="drop_constraints_out">{exec LANDA_CONVERSION.DROP_CONSTRAINT ('ADC_DECISION_REASON','ADC_NOT_NULL_01');
 -- from Table ADC_DECISION_REASON}</output>
                    <output name="add_constraints_out">{exec LANDA_CONVERSION.ADD_CONSTRAINT ('TCP_TCM_PROCEDURE','','','');}</output>
                    <output name="drop_indexes_out">{exec LANDA_CONVERSION.DROP_INDEX ('SBI_INDEX_TEMP');
 -- from Table SBR_SURVEY_BUILDER}</output>
                    <output name="drop_Trigger_out">{exec LANDA_CONVERSION.DROP_TRIGGER ('CTY_TGRB_U_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                    <output name="drop_TextIndexs_out">{LANDA_CONVERSION.DROP_INDEX ('CTY_TGRB_U_01'); -- from Table CTY_CONTACT_TYPE}</output>
                    <output name="drop_Sequence_out">{exec LANDA_CONVERSION.DROP_SEQUENCE ('PMA_SEQUENCE'); }</output>
                    <output name="rename_Column_out">{exec LANDA_CONVERSION.RENAME_COLUMN ('','','');}</output>
                    <output name="rename_Index_out">{exec LANDA_CONVERSION.RENAME_INDEX ('SBR_INDEX_TEMP','SBR_CREATE_DATE');
                    --fromTableSBR_SURVEY_BUILDER}</output>
                    <output name="rename_Constraints_out">{exec LANDA_CONVERSION.RENAME_CONSTRAINT ('','','');}</output>
                    <output name="rename_Table_out">{exec LANDA_CONVERSION.RENAME_TABLE ('MAX2_SHA_TS','');
-- from Table AAN_ALERT_ACTION}</output>
                    <output name="modify_Column_out">{exec LANDA_CONVERSION.MODIFY_COLUMN ('CDI_CLINICAL_DATA_ITEM','CDI_CODE','VARCHAR2','(15)');
 -- WAS 'VARCHAR2','(6)',''}</output>
                    <output name="add_Index_out">{exec LANDA_CONVERSION.ADD_INDEX ('SBI_INDEX_TEMP','SBR_SURVEY_BUILDER','SBR_CREATE_DATE','MAX2_INDEX_H_TS');}</output>
                    <output name="move_Index_out">{exec LANDA_CONVERSION.MOVE_IND_TBLSPC ('AUM_INDEX_03','MAX2_INDEX_S_TS');}</output>
                    <output name="add_Sequence_out">{exec LANDA_CONVERSION.CREATE_SEQUENCE ('MAP_CASE_1_SEQUENCE','1','1','9999999999','NOCYCLE','20');}</output>
                    <output name="add_Trigger_out">{exec LANDA_CONVERSION.CREATE_RECORD_VERSION_TRIGGER('ADC_DECISION_REASON');}</output>
                    <output name="add_TextIndex_out">{exec LANDA_CONVERSION.CREATE_TEXT_INDEX ('CDI_TEXT_INDEX_01','CDI_CLINICAL_DATA_ITEM','CDI_DESC','','STOPLIST');}</output>
                    <output name="add_Procedure_out">{CREATE OR REPLACE procedure UDT_DROP_OBJECT (p_object_name in varchar2, p_object_type in varchar2) as begin if p_object_type = 'TABLE' then execute immediate 'drop table ' || p_object_name; end if; if p_object_type = 'SEQUENCE' then execute immediate 'drop sequence ' || p_object_name; end if; end;
/}</output>
                    <!--output name="enable_Constraint_out">{exec LANDA_CONVERSION.ENABLE_CONSTRAINT('', '');}</output-->
                    <!--output name="validate_Constraint_out">{exec LANDA_CONVERSION.ENABLE_CONSTRAINT('', '');}</output-->
                    <output name="drop_Column_out">{exec LANDA_CONVERSION.DROP_COLUMN ('AML_AUTOMATED_MESSAGE_LOG','AML_MEMBER_OPTION_SELECTED','Y');
-- from Table AML_AUTOMATED_MESSAGE_LOG}</output>
                    <output name="drop_Table_out">{exec LANDA_CONVERSION.DROP_TABLE ('CTY_CONTACT_TYPE'); }</output>
                    <output name="recreate_constraints_out">{exec LANDA_CONVERSION.DROP_TABLE ('CTY_CONTACT_TYPE'); }</output>
                    <output name="add_Table_out">{exec LANDA_CONVERSION.CREATE_TABLE ('AAN_ALERT_ACTION','MAX2_SHA_TS','AAN_CODE','VARCHAR2','(6)');}</output>
                </outputs>
                </version>
                </versions>
        </test>
        <test name="tcl_unit_processModifyColumn" sequence="1" type="positive">
            <description>This tests the proc processModifyColumn</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="2">
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="type">MODIFY.COLUMNS</input>
                        <input name="value">{CDI_CLINICAL_DATA_ITEM CDI_CODE {VARCHAR2 15 {} {} 1 {}} {VARCHAR2 6 {} {} 1 {}}}</input>
                    </inputs>
                    <outputs count ="1">
                        <output name="expected_result">{LANDA_CONVERSION.MODIFY_COLUMN ('CDI_CLINICAL_DATA_ITEM CDI_CODE {VARCHAR2 15 {} {} 1 {}} {VARCHAR2 6 {} {} 1 {}}','','','');
 -- WAS '','',''}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processEnableConstraint" sequence="1" type="positive">
            <description> Unit test for processEnableConstraint proc </description>
                <versions>
                    <version number="03000000" condition="ge">
                    <inputs count="11">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="avalue1">TCP_TCM_PROCEDURE TCP_NOT_NULL_02 ENABLE</input>
                        <input name="bvalue1">TCP_TCM_PROCEDURE TCP_PRIMARY_KEY ENABLE</input>
                        <input name="cvalue1">TCP_TCM_PROCEDURE TCP_UNIQUE_01 ENABLE</input>
                        <input name="avalue2"/>
                        <input name="bvalue2"/>
                        <input name="cvalue2"/>
                        <input name="type">ENABLE/VALIDATE.CONSTRAINTS</input>
                        <input name="processEnableConstraint">positive</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_NOT_NULL_02');} {LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_PRIMARY_KEY');} {LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_UNIQUE_01');}</output>
                        <output name="expected_Result2"></output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processEnableConstraint" sequence="1" type="negative">
            <description> Unit test for processEnableConstraint proc when ADD.ENABLE.CONSTRAINTS does not exist in array </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="processEnableConstraint">negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - ENABLE/VALIDATE.CONSTRAINTS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_removeResult" sequence="1" type="positive">
            <description> Unit test for removeResult</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">2</input>
                        <input name="removeResult_type">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="drop_Index1">SBR_SURVEY_BUILDER SBI_INDEX_TEMP SBR_CREATE_DATE MAX2_INDEX_H_TS</input>
                        <input name="drop_Index2"/>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_result1"/>
                        <output name="expected_result2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_removeResult" sequence="2" type="negative">
            <description> Unit test for removeResult when ket does not exist in array</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="no_of_scenarios">1</input>
                        <input name="removeResult_type">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="drop_Index1"/>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_result1">can't read \\"RESULTS(DROP.INDEX)\\": no such element in array</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_outputDelta" sequence="1" type="positive">
            <description>This tests the proc outputDelta</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="4">
                        <input name="inputFile">testdata/Array_Input_Output.txt</input>
                        <input name="sampleRes1">sampleRESULTS635714_02</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                    </inputs>
                    <outputs count="1">
                        <output name="sampleFile1">$testDataDir/noData_635714.txt</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processRECREATE_INDEX_DROP" sequence="1" type="positive">
            <description> Unit test for processRECREATE_INDEX_DROP</description>
                <versions>
                    <version number="03030600" condition="ge">
                        <inputs count="7">
                            <input name="caseType">Positive</input>
                            <input name="no_of_scenarios">2</input>
                            <input name="MODEL_FILES_DIRECTORY">./Models</input>
                            <input name="modelConnection">Mod3100</input>
                            <input name="targetConnection"></input>
                            <input name="recreate_Index1">SBR_SURVEY_BUILDER SBR_INDEX_01 SBR_SCORE_HIGH_TSL_UID MAX2_INDEX_H_TS {SBR_SUSPEND_TSL_UID MAX2_INDEX_S_TS}</input>
                            <input name="recreate_Index2"></input>
                        </inputs>
                        <outputs count="2">
                        <output name="expected_result1">{ -- from Table SBR_SURVEY_BUILDER
 --        column mismatch: is SBR_SUSPEND_TSL_UID should be: SBR_SCORE_HIGH_TSL_UID
exec LANDA_CONVERSION.DROP_INDEX ('SBR_INDEX_01');}</output>
                        <output name="expected_result2"></output>
                        </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processRECREATE_INDEX_DROP" sequence="1" type="negative">
            <description> Unit test for processRECREATE_INDEX_DROP when ADD.recreate_Index is does not exist in array</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="5">
                    <input name="caseType">Negative</input>
                    <input name="no_of_scenarios">1</input>
                    <input name="MODEL_FILES_DIRECTORY">./Models</input>
                    <input name="modelConnection">Mod3100</input>
                    <input name="targetConnection"></input>
                    </inputs>
                    <outputs count="1">
                    <output name="expected_error">type - RECREATE.INDEXS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processValidateConstraint" sequence="1" type="positive">
            <description> Unit test for processValidateConstraint proc </description>
                <versions>
                    <version number="03020200" condition="invalid">
                    <inputs count="10">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="avalue1">TCP_TCM_PROCEDURE TCP_NOT_NULL_02 VALIDATE</input>
                        <input name="bvalue1">TCP_TCM_PROCEDURE TCP_PRIMARY_KEY VALIDATE</input>
                        <input name="cvalue1">TCP_TCM_PROCEDURE TCP_UNIQUE_01 VALIDATE</input>
                        <input name="avalue2"/>
                        <input name="bvalue2"/>
                        <input name="cvalue2"/>
                        <input name="type">VALIDATE.CONSTRAINTS</input>
                        <input name="processValidateConstraint"/>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{exec LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_NOT_NULL_02');} {exec LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_PRIMARY_KEY');} {exec LANDA_CONVERSION.ENABLE_CONSTRAINT('TCP_TCM_PROCEDURE', 'TCP_UNIQUE_01');}</output>
                        <output name="expected_Result2">{exec LANDA_CONVERSION.ENABLE_CONSTRAINT('', '');} {exec LANDA_CONVERSION.ENABLE_CONSTRAINT('', '');} {exec LANDA_CONVERSION.ENABLE_CONSTRAINT('', '');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processValidateConstraint" sequence="1" type="negative">
            <description> Unit test for processValidateConstraint proc when ADD.VALIDATE_CONSTRAINTS does not exist in array</description>
                <versions>
                    <version number="03010100" condition="invalid">
                    <inputs count="3">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="processValidateConstraint">negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - VALIDATE.CONSTRAINTS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setInitialNulls" sequence="1" type="positive">
            <description>This tests the proc setInitialNulls</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="utcfile">USER_TAB_COLUMNS</input>
                        <input name="sourceType">oldproc</input>
                        <input name="header">AAC_ADVERSE_ACTION_CLASS</input>
                    </inputs>
                    <outputs count ="1">
                        <output name="expected_result"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setNullResults" sequence="1" type="positive">
            <description> Unit test for setNullResults</description>
                <versions>
                    <version number="03010100" condition="ge">
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processRECREATE_CONSTRAINT_DROP" sequence="1" type="positive">
            <description> Unit test for processRECREATE_CONSTRAINT_DROP proc </description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="5">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1">TCP_TCM_PROCEDURE TCP_PRIMARY_KEY TCP_UID {P {} TCP_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="value2"/>
                        <input name="type">RECREATE.CONSTRAINTS</input>
                        <input name="processRecreateConsDrop">positive</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">{  -- P {} TCP_PRIMARY_KEY {} VALIDATED ENABLED
exec LANDA_CONVERSION.DROP_CONSTRAINT ('TCP_TCM_PROCEDURE','TCP_PRIMARY_KEY');}</output>
                        <output name="expected_Result2"></output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processRECREATE_CONSTRAINT_DROP" sequence="1" type="negative">
            <description> Unit test for processRECREATE_CONSTRAINT_DROP proc when no valus is passed when ADD.RECREATE_CONSTRAINTS is does not exist in array</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="3">
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="processRecreateConsDrop">negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - RECREATE.CONSTRAINTS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddTI" sequence="1" type="positive">
            <description> Unit test for processAddTI</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="8">
                        <input name="no_of_scenarios">2</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value1">CDI_CLINICAL_DATA_ITEM CDI_TEXT_INDEX_01 {CDI_DESC {} {} STOPLIST}</input>
                        <input name="value2"/>
                        <input name="type">TEXT_INDEX</input>
                        <input name="caseType">positive</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{exec LANDA_CONVERSION.CREATE_TEXT_INDEX ('CDI_TEXT_INDEX_01','CDI_CLINICAL_DATA_ITEM','CDI_DESC','','STOPLIST');}</output>
                        <output name="expected_Result2">{-- exec LANDA_CONVERSION.CREATE_TEXT_INDEX ('','','','','');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processAddTI" sequence="1" type="negative">
            <description> Unit test for processAddTI when RESULTS Array is empty</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">1</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="targetConnection"/>
                        <input name="value">AAN_ALERT_ACTION MAX2_SHA_TS</input>
                        <input name="type">TEXT_INDEX</input>
                        <input name="caseType">negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_error">type - ADD.TEXT_INDEXS</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processDrop0" sequence="1" type="positive">
            <description>This tests the proc processDrop0</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="22">
                        <input name="inputFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="totalCases">5</input>
                        <input name="sampleRes1">sampleRESULTS636724_01</input>
                        <input name="sampleWar1">sampleRESULTS636724_02</input>
                        <input name="listName1">Result</input>
                        <input name="type1">TABLE</input>
                        <input name="sampleRes2">sampleRESULTS636724_02</input>
                        <input name="sampleWar2">sampleRESULTS636724_02</input>
                        <input name="listName2">Result</input>
                        <input name="type2">TABLE</input>
                        <input name="sampleRes3">sampleRESULTS636724_02</input>
                        <input name="sampleWar3">sampleRESULTS636724_01</input>
                        <input name="listName3">Result</input>
                        <input name="type3">TABLE</input>
                        <input name="sampleRes4">sampleRESULTS636724_02</input>
                        <input name="sampleWar4">sampleRESULTS636724_02</input>
                        <input name="listName4">Result</input>
                        <input name="type4">SEQUENCE</input>
                        <input name="sampleRes5">sampleRESULTS636724_03</input>
                        <input name="sampleWar5">sampleRESULTS636724_01</input>
                        <input name="listName5">Result</input>
                        <input name="type5">TABLE</input>
                    </inputs>
                    <outputs count="5">
                        <output name="samplePD1">{LANDA_CONVERSION.DROP_TABLE ('CTY_CONTACT_TYPE'); } {LANDA_CONVERSION.DROP_TABLE ('PMA_PME_AFFILIATION'); } {LANDA_CONVERSION.DROP_TABLE ('UCT_USR_CONTACT_TYPE'); }</output>
                        <output name="samplePD2"/>
                        <output name="samplePD3">{LANDA_CONVERSION.DROP_TABLE ('CTY_CONTACT_TYPE'); } {LANDA_CONVERSION.DROP_TABLE ('PMA_PME_AFFILIATION'); } {LANDA_CONVERSION.DROP_TABLE ('UCT_USR_CONTACT_TYPE'); }</output>
                        <output name="samplePD4"/>
                        <output name="samplePD5">{LANDA_CONVERSION.DROP_TABLE ('ADC_DECISION_REASON'); } {LANDA_CONVERSION.DROP_TABLE ('CTY_CONTACT_TYPE'); } {LANDA_CONVERSION.DROP_TABLE ('PMA_PME_AFFILIATION'); } {LANDA_CONVERSION.DROP_TABLE ('UCT_USR_CONTACT_TYPE'); }</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processDrop1" sequence="1" type="positive">
            <description>This tests the proc processDrop1</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="4">
                        <input name="inputFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="totalCases">5</input>
                        <input name="sampleRes1">sampleRESULTS636724_01</input>
                        <input name="sampleWar1">sampleRESULTS636724_02</input>
                        <input name="listName1">Result</input>
                        <input name="type1">INDEX</input>
                        <input name="sampleRes2">sampleRESULTS636724_02</input>
                        <input name="sampleWar2">sampleRESULTS636724_02</input>
                        <input name="listName2">Result</input>
                        <input name="type2">INDEX</input>
                        <input name="sampleRes3">sampleRESULTS636724_02</input>
                        <input name="sampleWar3">sampleRESULTS636724_01</input>
                        <input name="listName3">Result</input>
                        <input name="type3">INDEX</input>
                        <input name="sampleRes4">sampleRESULTS636724_02</input>
                        <input name="sampleWar4">sampleRESULTS636724_02</input>
                        <input name="listName4">Result</input>
                        <input name="type4">TRIGGER</input>
                        <input name="sampleRes5">sampleRESULTS636724_03</input>
                        <input name="sampleWar5">sampleRESULTS636724_01</input>
                        <input name="listName5">Result</input>
                        <input name="type5">INDEX</input>
                    </inputs>
                    <outputs count="5">
                        <output name="samplePD1">{LANDA_CONVERSION.DROP_INDEX ('CTY_INDEX_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                        <output name="samplePD2"/>
                        <output name="samplePD3">{LANDA_CONVERSION.DROP_INDEX ('CTY_INDEX_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                        <output name="samplePD4"/>
                        <output name="samplePD5">{LANDA_CONVERSION.DROP_INDEX ('MEM_INDEX_02');
 -- from Table MEM_MEMBER} {LANDA_CONVERSION.DROP_INDEX ('CTY_INDEX_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processDrop2" sequence="1" type="positive">
            <description>This tests the proc processDrop2</description>
                <versions>
                    <version number="03020200" condition="ge">
                    <inputs count="22">
                        <input name="inputFile">$testDataDir/Array_Input_Output.txt</input>
                        <input name="totalCases">5</input>
                        <input name="sampleRes1">sampleRESULTS636724_01</input>
                        <input name="sampleWar1">sampleRESULTS636724_02</input>
                        <input name="listName1">Result</input>
                        <input name="type1">CONSTRAINT</input>
                        <input name="sampleRes2">sampleRESULTS636724_02</input>
                        <input name="sampleWar2">sampleRESULTS636724_02</input>
                        <input name="listName2">Result</input>
                        <input name="type2">CONSTRAINT</input>
                        <input name="sampleRes3">sampleRESULTS636724_02</input>
                        <input name="sampleWar3">sampleRESULTS636724_01</input>
                        <input name="listName3">Result</input>
                        <input name="type3">CONSTRAINT</input>
                        <input name="sampleRes4">sampleRESULTS636724_02</input>
                        <input name="sampleWar4">sampleRESULTS636724_02</input>
                        <input name="listName4">Result</input>
                        <input name="type4">CONSTRAINT</input>
                        <input name="sampleRes5">sampleRESULTS636724_03</input>
                        <input name="sampleWar5">sampleRESULTS636724_01</input>
                        <input name="listName5">Result</input>
                        <input name="type5">CONSTRAINT</input>
                    </inputs>
                    <outputs count="5">
                        <output name="samplePD1">{LANDA_CONVERSION.DROP_CONSTRAINT ('CTY_CONTACT_TYPE','CTY_NOT_NULL_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                        <output name="samplePD2"/>
                        <output name="samplePD3">{LANDA_CONVERSION.DROP_CONSTRAINT ('CTY_CONTACT_TYPE','CTY_NOT_NULL_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                        <output name="samplePD4"/>
                        <output name="samplePD5">{LANDA_CONVERSION.DROP_CONSTRAINT ('MCD_MEM_CLINICAL_DATA','MCD_NOT_NULL_04');
 -- from Table MCD_MEM_CLINICAL_DATA} {LANDA_CONVERSION.DROP_CONSTRAINT ('CTY_CONTACT_TYPE','CTY_NOT_NULL_01');
 -- from Table CTY_CONTACT_TYPE}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setMetaDataSource" sequence="1" type="positive">
            <description> Unit test for setMetaDataSource</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="type1">ADD.INDEXS ADD.TABLES</input>
                        <input name="casetype">Positive</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1">ADD.INDEXS ADD.TABLES</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setMetaDataSource" sequence="1" type="negative">
            <description> Unit test for setMetaDataSource when type value is null</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="type1"/>
                        <input name="casetype">Negative</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_Result1"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_logit" sequence="1" type="positive">
            <description> Unit test for logit proc </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="logFileName">DEFAULT_LOG</input>
                        <input name="stringData">DIFFERENCE REPORT</input>
                    </inputs>
                    <outputs count="0">
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_trimListItems" sequence="1" type="positive">
            <description>This tests the proc trimListItems</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="myList"> abc def jkl xyz  </input>
                    </inputs>
                    <outputs count ="1">
                        <output name="expected_result">abc def jkl xyz</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_trimListItems" sequence="2" type="positive">
            <description>This tests the proc trimListItems</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="myList">[list " abc" "def " " jkl " "xyz
                            "]                    </input>
                    </inputs>
                    <outputs count ="1">
                        <output name="expected_result">abc def jkl xyz</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_processRename" sequence="1" type="positive">
            <description>Unit test for proc processRename</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">2</input>
                        <input name="list1">Results</input>
                        <input name="type1">INDEX</input>
                        <input name="type2">TABLE</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expectedresult1">{exec LANDA_CONVERSION.RENAME_INDEX ('',''); 
-- from Table INDEX} {exec LANDA_CONVERSION.RENAME_INDEX ('',''); 
-- from Table INDEX}</output>
                        <output name="expectedresult2">{exec LANDA_CONVERSION.RENAME_TABLE ('',''); 
-- from Table TABLE} {exec LANDA_CONVERSION.RENAME_TABLE ('',''); 
-- from Table TABLE}</output>
                    </outputs>
                    </version>
                 </versions>
        </test>
        <test name="tcl_unit_processRename" sequence="2" type="negative">
            <description>This tests the proc isInfo</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="1">
                        <input name="no_of_scenarios">1</input>
                        <input name="list1">Warnings</input>
                        <input name="type1"/>
                    </inputs>
                    <outputs count="1">
                        <output name="expectedresult1">{exec LANDA_CONVERSION.RENAME_ ('','','');} {exec LANDA_CONVERSION.RENAME_ ('','','');}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getSchemaProcedureData1.1" sequence="1" type="positive">
            <description> Unit test for p_getSchemaProcedureData </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="result"/>
                        <!-- <input name="database">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                                                <input name="schemaConnections">targetConnection</input>
                                                <input name="targetConnection_server">db09</input>
                                                <input name="targetConnection_schemaVersion">$lastVersion</input>
                                                <input name="MODEL_FILES_DIRECTORY">Models</input>
                                                <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="targetConnection"/>
                        <input name="value">AAN_ALERT_ACTION MAX2_SHA_TS</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getSchemaProcedureData1.2" sequence="1" type="negative">
            <description> Unit test for p_getSchemaProcedureData </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="result"/>
                        <!-- <input name="database">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="targetConnection"/>
                        <input name="tables">AAC_ADVERSE_ACTION_CLASS</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getSchemaProcedureData1.3" sequence="1" type="negative">
            <description> Unit test for p_getSchemaProcedureData by setting the key target(DEF.USER_PROCEDURES.data) </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="8">
                        <input name="result"/>
                        <!-- <input name="database">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="MODEL_FILES_DIRECTORY">./Models</input>
                        <input name="modelConnection">Mod$lastShortVersion</input>
                        <input name="targetConnection"/>
                        <input name="tables">UDT_ADVERSE_ACTION_CLASS</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_getSchemaSequenceData" sequence="1" type="positive">
            <description>This tests the proc p_getSchemaProcedureData</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="sampleInput">$testDataDir/Array_Input_Output.txt</input>
                        <input name="modelConnection">Mod3100</input>
                        <input name="schemaConnections">targetConnection</input>
                        <!-- <input name="connectionString">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <!-- <input name="tdbh">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="tableName1">STF_STAFF</input>
                        <input name="tableName2">TGA_TPA_TSG_ASSOCIATION</input>
                        <input name="tableName3">UnknownTable</input>
                    </inputs>
                    <outputs count="4">
                        <output name="p_getSchemaSequenceData1">{{CEQ_UID 1 9999999999 1 1 NOCACHE NOCYCLE}}</output>
                        <output name="p_getSchemaSequenceKey1">CEQ_SEQUENCE</output>
                        <output name="p_getSchemaSequenceHeader1">CEQ_CASE_ENROLLMENT_QUEUE</output>
                        <output name="p_getSchemaSequenceData2">{{TGA_UID 1 9999999999 1 1 NOCACHE NOCYCLE}}</output>
                        <output name="p_getSchemaSequenceKey2">TGA_SEQUENCE</output>
                        <output name="p_getSchemaSequenceHeader2">TGA_TPA_TSG_ASSOCIATION</output>
                        <output name="p_getSchemaSequenceData3"/>
                        <output name="p_getSchemaSequenceKey3"/>
                        <output name="p_getSchemaSequenceHeader3"/>
                        <output name="p_getSchemaSequence_testcount">3</output>
                        <output name="p_getSchemaSequence_name">positive</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_MoveOutput" sequence="1" type="positive">
            <description>This tests the proc MoveOutput</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="6">
                        <input name="testdir">MoveOutput</input>
                        <input name="testingTempDir1">testingTempDir</input>
                        <input name="samplefile">Array_Input_Output.txt</input>
                        <input name="testingTempDir3">testing Temp Dir</input>
                        <input name="testingTempDir6">testingTempDir1/testingTempDir2/testingTempDir3</input>
                        <input name="asLstFile">cert0000.lst LANDA_PACKAGE_UPDATE.lst CTXTextStorage.lst udw_dlg_association_fix.lst LANDA_CONVERSION_SOURCE.lst CR03000000.lst FDD.lst</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_splat" sequence="1" type="positive">
            <description> Unit test for splat</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="9">
                        <input name="no_of_scenarios">4</input>
                        <input name="str1">VARCHAR2/150/2/*</input>
                        <input name="str2">/VARCHAR2/150/2/</input>
                        <input name="str3">VARCHAR2/150///2</input>
                        <input name="str4">VARCHAR2 VARCHAR4 15 *</input>
                        <input name="sep1">/</input>
                        <input name="sep2">/</input>
                        <input name="sep3">/</input>
                        <input name="sep4">CH</input>
                    </inputs>
                    <outputs count="4">
                        <output name="expected_Result1">VARCHAR2 150 2 *</output>
                        <output name="expected_Result2">{} VARCHAR2 150 2 {}</output>
                        <output name="expected_Result3">VARCHAR2 150 {} {} 2</output>
                        <output name="expected_Result4">VAR {AR2 VAR} {AR4 15 *}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_splat" sequence="2" type="Negative">
            <description> Unit test for splat when string is null</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="7">
                        <input name="no_of_scenarios">3</input>
                        <input name="str1"/>
                        <input name="str2">/VARCHAR2/150/2/</input>
                        <input name="str3">/VARCHAR2/150/2/</input>
                        <input name="sep1">/</input>
                        <input name="sep2"/>
                        <input name="sep3">*</input>
                    </inputs>
                    <outputs count="3">
                        <output name="expected_Result1"/>
                        <output name="expected_Result2">/VARCHAR2/150/2/</output>
                        <output name="expected_Result3">/VARCHAR2/150/2/</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setDefaultMeta" sequence="1" type="positive">
            <description> Unit test for setDefaultMeta </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="arrayFile">$testDataDir/Array_Input_output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setDefaultMetaByList" sequence="1" type="positive">
            <description>Unit test for proc setDefaultMetaByList</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="list1">AAC AAB AAV</input>
                        <input name="list2"/>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_result1">AAC AAB AAV</output>
                        <output name="expected_result2"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_unsetInfo" sequence="1" type="positive">
            <description>This tests the proc unsetInfo</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="11">
                        <input name="inputVal1"/>
                        <input name="inputName2">connectString</input>
                        <input name="inputVal2">a/a@a</input>
                        <input name="inputName3">nonExistantName</input>
                        <input name="inputName4">silent*</input>
                        <input name="inputName41">silent1</input>
                        <input name="inputVal41">Y</input>
                        <input name="inputName42">silent2</input>
                        <input name="inputVal42">N</input>
                        <input name="inputName5">all</input>
                        <input name="inputName51">sampleRESULTS</input>
                    </inputs>
                    <outputs count="5">
                        <output name="outputVal1"/>
                        <output name="outputVal2"/>
                        <output name="outputVal3"/>
                        <output name="outputVal4"/>
                        <output name="outputVal5"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_putt" sequence="1" type="positive">
            <description>Unit test for proc putt</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">1</input>
                        <input name="inputstring">dbCompare.tcl version \[dbCompare.version\], revision \[dbCompare.revision\] successfully completed.\n</input>
                        <input name="filename">putt_test</input>
                    </inputs>
                    <outputs count="1">
                        <output name="expected_result">dbCompare.tcl version 6, revision 0 successfully completed.</output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setInitialArrays" sequence="1" type="positive">
            <description>This tests the proc setInitialArrays</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="0">
                    </inputs>
                    <outputs count ="0">
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setDebugOn_1.1" sequence="1" type="positive">
            <description>Unit test for proc setDebugOn</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="filename">setDebugOn_test</input>
                        <input name="type">positive</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setDebugOn_1.2" sequence="1" type="negative">
            <description>Unit test for proc setDebugOn</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="channel">NOT_NULL</input>
                        <input name="type">negative</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_setlog" sequence="1" type="positive">
            <description>This tests the proc setlog</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="1">
                        <input name="fileName">abc.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_showArrayNames" sequence="1" type="positive">
            <description> Unit test for showArrayNames </description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="2">
                        <input name="filter">USER_TAB_COLUMNS</input>
                        <input name="arrayFile">$testDataDir/Array_Input_output.txt</input>
                    </inputs>
                    <outputs count="0"/>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_showArray" sequence="1" type="positive">
            <description>This tests the proc showArray</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="12">
                        <input name="arrVals1">name1 val1 name2 val2</input>
                        <input name="arrVals2">nome1 vol1 name1 val1 name2 val2</input>
                        <input name="filter2">name*</input>
                        <input name="arrVals3">nome1 vol1 name1 val1 name2 val2</input>
                        <input name="filter3">*</input>
                        <input name="endline3">****</input>
                        <input name="arrVals4">nome1 vol1 name1 val1 name2 val2</input>
                        <input name="filter4">*</input>
                        <input name="endline4">****</input>
                        <input name="delim4">:</input>
                        <input name="arrVals5">nome1 vol1 name1 val1 name2 val2</input>
                        <input name="filter5">name</input>
                    </inputs>
                    <outputs count="5">
                        <output name="sampleOutput1">name1 {val1} name2 {val2}</output>
                        <output name="sampleOutput2">name1 {val1} name2 {val2}</output>
                        <output name="sampleOutput3">name1 {val1}****name2 {val2}****nome1 {vol1}</output>
                        <output name="sampleOutput4">name1:{val1}****name2:{val2}****nome1:{vol1}</output>
                        <output name="sampleOutput5"/>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_insertSHS" sequence="1" type="positive">
            <description> Unit test for proc insertSHS</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="14">
                        <input name="no_of_scenarios">2</input>
                        <!-- <input name="connectionString">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="scriptname1">UT_Test</input>
                        <input name="type1">Update</input>
                        <input name="desc1">This is a test script</input>
                        <input name="status1">PASS</input>
                        <input name="newversion1"/>
                        <input name="oldversion1"/>
                        <input name="scriptname2">UT_Test</input>
                        <input name="type2">Update</input>
                        <input name="desc2">This is a test script</input>
                        <input name="status2">Fail</input>
                        <input name="newversion2">03.03.00.00</input>
                        <input name="oldversion2">03.00.00.00</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_insertSHS" sequence="2" type="negative">
            <description> Unit test for proc insertSHS</description>
                <versions>
                    <version number="03010100" condition="ge">
                    <inputs count="14">
                        <input name="no_of_scenarios">1</input>
                        <!-- <input name="connectionString">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                        <input name="schemaConnections">targetConnection</input>
                        <input name="targetConnection_server">db09</input>
                        <input name="targetConnection_schemaVersion">$lastVersion</input>
                        <input name="scriptname1">UT_Test</input>
                        <input name="scriptname1">**</input>
                        <input name="type1">**</input>
                        <input name="desc1">**</input>
                        <input name="status1">**</input>
                        <input name="newversion1">**</input>
                        <input name="oldversion1">**</input>
                    </inputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_compareConstraints" sequence="1" type="positive">
            <description> Unit test for p_compareConstraints proc</description>
                <versions>
                    <version number="03030600" condition="ge">
                    <inputs count="19">
                        <input name="no_of_scenarios">2</input>
                        <input name="scenarioType">positive</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="model">Mod3360</input>
                        <input name="targetConnection"/>
                        <input name="model_header1">UCE_UCR_CEL_LINK</input>
                        <input name="model_header2">UCE_UCR_CEL_LINK</input>
                        <input name="model_key1">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_key2">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_colData1">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_CEL_CODE 2} {UCE_UCR_UID 1} {UCE_UCR_UID 1}}</input>
                        <input name="target_colData1">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_CEL_CODE 2} {UCE_UCR_UID 1} {UCE_UCR_UID 1}}</input>
                        <input name="model_colData2">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_UCR_UID 1} {UCE_CEL_CODE 2} {UCE_UCR_UID 1}}</input>
                        <input name="target_colData2">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_CEL_CODE 2} {UCE_UCR_UID 1} {UCE_UCR_UID 1}}</input>
                        <input name="model_cons_key1">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_cons_key2">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_cons_col1">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="model_cons_col2">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="target_cons_col1">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="target_cons_col2">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1"></output>
                        <output name="expected_Result2"></output>
                    </outputs>
                    </version>
                </versions>
        </test>
        <test name="tcl_unit_p_compareConstraints" sequence="2" type="negative">
            <description> Unit test for p_compareConstraints proc</description>
                <versions>
                    <version number="03030600" condition="ge">
                    <inputs count="19">
                        <input name="no_of_scenarios">2</input>
                        <input name="scenarioType">negative</input>
                        <input name="MODEL_FILES_DIRECTORY">Models</input>
                        <input name="model">Mod3360</input>
                        <input name="targetConnection"/>
                        <input name="model_header1">UCE_UCR_CEL_LINK</input>
                        <input name="model_key1">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_header2">AAD_ADB_ADDRESS_BOOK_ADDRESS ADB_ADDRESS_BOOK</input>
                        <input name="model_key2">{AAD_ADB_FOREIGN_KEY_01 AAD_NOT_NULL_01 AAD_NOT_NULL_02 AAD_NOT_NULL_03 AAD_PRIMARY_KEY AAD_PRIMARY_KEY}  {ADB_LAN_FOREIGN_KEY_01 ADB_MEM_FOREIGN_KEY_01 ADB_NOT_NULL_01 ADB_NOT_NULL_02 ADB_NOT_NULL_03 ADB_NOT_NULL_04 ADB_PRIMARY_KEY ADB_PVD_FOREIGN_KEY_01}</input>
                        <input name="model_colData1">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_CEL_CODE 2} {UCE_UCR_UID 1} {UCE_UCR_UID 1}}</input>
                        <input name="target_colData1">{{UCE_CEL_CODE 1} {UCE_UCR_UID {}} {UCE_RECORD_VERSION {}} {UCE_CEL_CODE {}} {UCE_CEL_CODE 1} {UCE_UCR_UID 2} {UCE_UCR_UID 1}}</input>
                        <input name="model_colData2">{{AAD_ADB_UID 1} {AAD_CNT_CODE 1} {AAD_CNY_CODE 1} {AAD_ADB_UID {}} {AAD_TYPE {}} {AAD_RECORD_VERSION {}} {AAD_ADB_UID 1} {AAD_TYPE 2} {AAD_STA_CODE 1}} {{ADB_LAN_CODE 1} {ADB_MEM_UID 1} {ADB_UID {}} {ADB_ID {}} {ADB_TYPE {}} {ADB_RECORD_VERSION {}} {ADB_UID 1} {ADB_PVD_UID 1}}</input>
                        <input name="target_colData2">{{AAD_ADB_UID 1} {AAD_CNT_CODE 1} {AAD_CNY_CODE 1} {AAD_ADB_UID {}} {AAD_TYPE {}} {AAD_RECORD_VERSION {}} {AAD_ADB_UID 1} {AAD_TYPE 2} {AAD_STA_CODE 1}} {{ADB_LAN_CODE 1} {ADB_MEM_UID 1} {ADB_UID {}} {ADB_ID {}} {ADB_TYPE {}} {ADB_RECORD_VERSION {}} {ADB_UID 1} {ADB_PVD_UID 1}}</input>
                        <input name="model_cons_key1">{UCE_CEL_FOREIGN_KEY_01 UCE_NOT_NULL_01 UCE_NOT_NULL_02 UCE_NOT_NULL_03 UCE_PRIMARY_KEY UCE_UCR_FOREIGN_KEY_01}</input>
                        <input name="model_cons_key2">{{AAD_ADB_FOREIGN_KEY_01 AAD_NOT_NULL_01 AAD_NOT_NULL_02 AAD_NOT_NULL_03 AAD_PRIMARY_KEY} {ADB_LAN_FOREIGN_KEY_01 ADB_MEM_FOREIGN_KEY_01 ADB_NOT_NULL_01 ADB_NOT_NULL_02 ADB_NOT_NULL_03 ADB_NOT_NULL_04 ADB_PRIMARY_KEY ADB_PVD_FOREIGN_KEY_01}}</input>
                        <input name="model_cons_col1">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="target_cons_col1">{P {} UCE_PRIMARY_KEY {} VALIDATED ENABLED}</input>
                        <input name="model_cons_col2">{{R {NO ACTION} {} ADB_PRIMARY_KEY VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {P {} AAD_PRIMARY_KEY {} VALIDATED ENABLED}}</input>
                        <input name="target_cons_col2">{{R CASCADE {} ADB_PRIMARY_KEY VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {C {} {} {} VALIDATED ENABLED} {P {} AAD_PRIMARY_KEY {} VALIDATED ENABLED}}</input>
                    </inputs>
                    <outputs count="2">
                        <output name="expected_Result1">{UCE_UCR_CEL_LINK UCE_PRIMARY_KEY {UCE_CEL_CODE UCE_UCR_UID} VALIDATED {Was:UCE_CEL_CODE UCE_UCR_UID Should be UCE_CEL_CODE UCE_UCR_UID}}</output>
                        <output name="expected_Result2">{AAD_ADB_ADDRESS_BOOK_ADDRESS {AAD_ADB_FOREIGN_KEY_01 AAD_NOT_NULL_01 AAD_NOT_NULL_02 AAD_NOT_NULL_03 AAD_PRIMARY_KEY} {} {R {NO ACTION} {} ADB_PRIMARY_KEY VALIDATED ENABLED} {ADB_ADDRESS_BOOK ADB_PRIMARY_KEY {{ADB_UID 1}}} {Was:CASCADE Should be NO ACTION}}</output>
                    </outputs>
                    </version>
                </versions>
        </test>
    </tests>
</category>
<category name="preUpgradeEval">
        <config>set MODEL_FILES_DIRECTORY Models</config>
        <tests>
            <test name="tcl_unit_PUE_compareCodes" sequence="1" type="positive">
                <description>This tests the model connection information setup (typically the modelfile)</description>
                <inputs count="4">
                    <input name="no_of_scenarios">3</input>
                    <input name="dbConn1">CRDEVEL02040900/CRDEVEL02040900@cic-svr-db08-orcl</input>
                    <input name="srcModDir1">Mod2480</input>
                    <input name="targetModDir1">Mod3000</input>
                    <input name="dbConn2">CRDEVEL02040900/CRDEVEL02040900@cic-svr-db08-orcl</input>
                    <input name="srcModDir2">Mod2480</input>
                    <input name="targetModDir2">Mod3100</input>
                    <input name="dbConn3">CRSTAND_CR200/CRSTAND_CR200@cic-svr-db08-orcl</input>
                    <input name="srcModDir3">Mod2000</input>
                    <input name="targetModDir3">Mod3100</input>
                </inputs>
                <outputs count="3">
                    <output name="result1"></output>
                    <output name="result2"></output>
                    <output name="result3"></output>
                </outputs>
            </test>
            <test name="tcl_unit_pueUsage" sequence="1" type="positive">
                <description>This tests is to check whether pueUsage method return success or not</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="1">
                        <input name="no_of_scenarios">1</input>
                    </inputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_pueHelp" sequence="1" type="positive">
                <description>This tests is to check whether pueHelp method return success or not</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="1">
                        <input name="no_of_scenarios">1</input>
                    </inputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_preUpgradeEvalgetDescription" sequence="1" type="positive">
                <description>This tests is to check whether preUpgradeEval.getDescription method return success or not</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="1">
                        <input name="no_of_scenarios">1</input>
                    </inputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getPUEInputs" sequence="1" type="positive">
            <description> Unit test for getPUEInputs proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                    <inputs count="2">
                        <input name="no_of_scenarios">2</input>
                        <input name="database1">abc</input>
                        <input name="convtext1">def</input>
                        <input name="email1">sample@xyz.com</input>
                        <input name="silent1">1</input>
                    </inputs>
                    <outputs count="1">
                    </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_preUpgradeEval.version" sequence="1" type="positive">
                <description>This test is to check the version of preUpgradeEval</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_preUpgradeEval.revision" sequence="1" type="positive">
                <description>This test is to check the revision of preUpgradeEval</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkSchemaData" sequence="1" type="positive">
                <description>checkSchemaData validates system data without issues</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="scenario">positive</input>
                            <input name="no_of_scenarios">2</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod1">Mod$lastShortVersion</input>
                            <input name="outdir">.</input>
                            <input name="currentMod2">Mod3100</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">0</output>
                            <output name="outval2">1</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <!--test name="tcl_unit_checkSchemaData" sequence="1" type="negative">
                <description>This test is for checkSchemaData proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="scenario">negative</input>
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod1">Mod$currentShortVersion</input>
                            <input name="outdir">.</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">1</output>
                        </outputs>
                    </version>
                </versions>
            </test-->
            <test name="tcl_unit_checkPermissions" sequence="1" type="positive">
                <description>This test is for checkPermissions proc</description>
                <versions>
                    <version number="03020000" condition="invalid">
                        <inputs count="4">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">positive</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkPermissions" sequence="1" type="negative">
                <description>This test is for checkPermissions proc</description>
                <versions>
                    <version number="03020000" condition="invalid">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">negative</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">noConnection</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">3</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_compareModelCodes" sequence="1" type="positive">
                <description>This test is for compareModelCodes  proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="scenario">positive</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod1">Mod$currentShortVersion</input>
                            <input name="targetMod1">Mod3200</input>
                            <input name="currentMod2">Mod3000</input>
                            <input name="targetMod2">Mod3100</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">0</output>
                            <output name="outval2">1</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_compareModelCodes" sequence="1" type="negative">
                <description>This test is for compareModelCodes  proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">negative</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod1">Mod2430</input>
                            <input name="targetMod1">Mod$currentShortVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">Missing model directory Mod2470</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_validateShsEntries" sequence="1" type="positive">
                <description>This test is for validateShsEntries  proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">positive</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_validateShsEntries" sequence="1" type="negative">
                <description>This test is for validateShsEntries  proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">negative</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">2</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_validateShsEntries_2" sequence="1" type="negative">
                <description>This test is for validateShsEntries  proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">negative</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">1</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkModelResources" sequence="1" type="positive">
                <description>This test is for checkModelResources proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="currentMod1">Mod$currentShortVersion</input>
                            <input name="short_target1">$currentShortVersion</input>
                            <input name="targetProduct1">CR</input>
                            <input name="target_model1">Mod$currentShortVersion</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkModelResources" sequence="1" type="negative">
                <description>This test is for checkModelResources proc</description>
                <versions>
                    <version number="03020000" condition="invalid">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="currentMod1">Mod1600</input>
                            <input name="short_target1">3200</input>
                            <input name="targetProduct1">CR</input>
                            <input name="target_model1">Mod3200</input>
                            <input name="currentMod2">Mod3200</input>
                            <input name="short_target2">3200</input>
                            <input name="targetProduct2">CR</input>
                            <input name="target_model2">Mod1600</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">2</output>
                            <output name="outval2">2</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkToolResources" sequence="1" type="positive">
                <description>This test is for checkToolResources proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="targetProduct1">CR</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkToolResources" sequence="1" type="negative">
                <description>This test is for checkToolResources proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="targetProduct1">CA</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">2</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_printHeader" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="log1">testprintheader.txt</input>
                            <input name="text1">print logs of test case tcl_unit_printHeader</input>
                            <input name="fileName">DEBUG_SDG_START_OUT.out</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
             <test name="tcl_unit_printHeaderN" sequence="1" type="negative">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="log1"></input>
                            <input name="text1">print logs of test case tcl_unit_printHeader</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval1"></output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_printResult" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="log1">testprintresult.txt</input>
                            <input name="text1">print logs of test case tcl_unit_printResult</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval1">0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_printPueFooter" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentver">03010000</input>
                            <input name="targetver">03030000</input>
                            <input name="outdir">PPF_outdir</input>
                            <input name="total_minutes">30</input>
                            <input name="total_seconds">10</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval">03010000</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkIndexes" sequence="1" type="positive">
                <description>This test is for checkIndexes proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod">Mod2430</input>
                            <input name="targetMod">Mod$currentShortVersion</input>
                            <input name="log">check_indexes_log.txt</input>
                            <input name="total_minutes">30</input>
                            <input name="total_seconds">10</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval">03030000</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_analyzeTblsp" sequence="1" type="positive">
                <description>This test is for analyzeTblsp proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="currentMod">Mod2430</input>
                            <input name="targetMod">Mod$currentShortVersion</input>
                            <input name="Tblsplog">analyzeTblsp_log.txt</input>
                            <input name="act_tblsp_lst">MAX2_SHA_TS MAX2_CTX_TS</input>
                            <input name="tblsp_lst">z</input>
                            <input name="update_table_lst">SHS_SCHEMA_HISTORY SHO_STF_HOSPITAL_SERVICE</input>
                        </inputs>
                        <outputs count="1">
                        <output name="outval">03020000</output>
                        </outputs>
                    </version>
                </versions>
            </test>
        </tests>
    </category>
<category name="SysDataGen">
        <config>set MODEL_FILES_DIRECTORY Models</config>
        <tests>
            <test name="tcl_unit_SDG_compareCodes" sequence="1" type="positive">
                <description>This tests us to check the output of sysdatagen after</description>
                <inputs count="2">
                    <input name="no_of_scenarios">1</input>
                    <input name="MTCLSH">G:/MTCLSH/mtclsh.bat</input>
                    <input name="dbConn">UNIT_CR310/UNIT_CR310@cic-svr-db09-site</input>
                    <input name="targetModDir">Mod3100</input>
                </inputs>
                <outputs count="1">
                    <output name="Table">ACA_AUTH_CONDITION_CATEGORY</output>
                    <output name="Inserts">0</output>
                    <output name="Updates">1</output>
                </outputs>
            </test>
            <test name="tcl_unit_SysDataGen.revision" sequence="1" type="positive">
                <description>This test is to check the revision of SysDataGen</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_deleteScriptHeader" sequence="1" type="positive">
                <description>This test is to test the header for the delete sql script</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="names_file">name.txt</input>
                            <input name="values_file">value.txt</input>
                            <input name="where_file">where.txt</input>
                            <input name="spool">CR03020000_Deletes</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_DMLheader" sequence="1" type="positive">
                <description>This test is to test the header for the insert/update sql script</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="no_of_scenarios">1</input>
                            <input name="names_file">name.txt</input>
                            <input name="values_file">value.txt</input>
                            <input name="where_file">where.txt</input>
                            <input name="spool">CR03020000_Deletes</input>
                            <input name="auto">no</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_sdg_report" sequence="1" type="positive">
                <description>This test is to test the outputs to the sysdatagen log file</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="line_out">testing for sdg_report proc</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_sdg_list_report" sequence="1" type="positive">
                <description>This test is for tcl_unit_sdg_list_report proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="line_out">testing for sdg_report proc</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getConcatVals" sequence="1" type="positive">
                <description>This test is for getConcatVals proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="str1">testing!!!for!!getConcatVals^^procedure</input>
                            <input name="splitStr1">!!!</input>
                            <input name="str2">{testing!!!for!!getConcatVals^^procedure}</input>
                            <input name="splitStr2">!!!</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">testing for!!getConcatVals^^procedure</output>
                            <output name="outval2">testing for!!getConcatVals^^procedure</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getConcatVals" sequence="2" type="negative">
                <description>This test is for getConcatVals proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="str1">!!!</input>
                            <input name="splitStr1">!!!</input>
                            <input name="str2"></input>
                            <input name="splitStr2">!!!</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{} {}</output>
                            <output name="outval2">{}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_cleanModelVals" sequence="1" type="positive">
                <description>This test is for cleanModelVals proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">4</input>
                            <input name="str1">testing!!!for!!cleanModelVals^^procedure</input>
                            <input name="splitStr1">!!!</input>
                            <input name="str2">{testing!!!for!!cleanModelVals^^procedure}</input>
                            <input name="splitStr2">!!!</input>
                            <input name="str3">`testing!!!for`!!`cleanModelVals^^procedure`</input>
                            <input name="splitStr3">!!!</input>
                            <input name="str4">'testing!!!for'!!'cleanModelVals^^procedure'</input>
                            <input name="splitStr4">!!!</input>

                        </inputs>
                        <outputs count="2">
                            <output name="outval1">testing for!!cleanModelVals^^procedure</output>
                            <output name="outval2">testing for!!cleanModelVals^^procedure</output>
                            <output name="outval3">''testing for''!!''cleanModelVals^^procedure''</output>
                            <output name="outval4">''testing for''!!''cleanModelVals^^procedure''</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_cleanModelVals" sequence="2" type="negative">
                <description>This test is for cleanModelVals proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="str1">`!!!`</input>
                            <input name="splitStr1">!!!</input>
                            <input name="str2">````</input>
                            <input name="splitStr2">!!!</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">'' ''</output>
                            <output name="outval2">''''''''</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkUniqueRow" sequence="1" type="positive">
                <description>This test is for checkUniqueRow proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="14">
                            <input name="no_of_scenarios">2</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="column_lst1">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="rowdata1">SYSUPH1 {Denial1 Upheld1, Appeal1 Denied1} UPH Y1 Y1</input>
                            <input name="metal1">0</input>
                            <input name="db_delimit1">!!!</input>
                            <input name="table2">SRU_SECURITY_RESOURCE</input>
                            <input name="key_lst2">SRU_UID</input>
                            <input name="column_lst2">SRU_ID SRU_DESC SRU_RESOURCE_TYPE SRU_SRU_UID_PARENT SRU_RESOURCE_LOCKED_YN SRU_RETRIEVAL_LOG_YN SRU_WIN_CODE SRU_FIELD_METADATA_ENABLED_YN SRU_ALLOW_ACCESS_BUTTON_YN</input>
                            <input name="rowdata2">11111 ADDRBOOK_000 {Address Book} B {} N Y {} N N</input>
                            <input name="metal2">0</input>
                            <input name="db_delimit2">!!!</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">1 {} {} {} {} {} {} {ADE_DESC 1}</output>
                            <output name="outval2">{} {} 1 {} {{SRU_ID = 'ADDRBOOK_000'} {SRU_RESOURCE_TYPE = 'B'}} {} 1 {{SRU_ID SRU_RESOURCE_TYPE} {1 3}}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkUniqueRow" sequence="2" type="negative">
                <description>This test is for table with no Unique Constraints</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="8">
                            <input name="no_of_scenarios">1</input>
                            <!-- <input name="db">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <!-- <input name="db">CRPOOL03020000_520/CRPOOL03020000_520@cic-svr-db09-site</input> -->
                            <input name="table1">ACE_AUTH_CERTIFICATION_TYPE</input>
                            <input name="key_lst1">ACE_CODE</input>
                            <input name="column_lst1">ACE_DESC ACE_DATE_BEGIN ACE_DATE_END ACE_VERSION</input>
                            <input name="rowdata1">S1 Revised1 16-OCT-2000 31-DEC-2099 004010</input>
                            <input name="metal1">0</input>
                            <input name="db_delimit1">!!!</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">1 {} {} {} {} {} {} {}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getUniqueConstraints" sequence="1" type="positive">
                <description>This test is for getUniqueConstraints proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="8">
                            <input name="no_of_scenarios">2</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="column_lst1">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="table2">SRU_SECURITY_RESOURCE</input>
                            <input name="key_lst2">SRU_UID</input>
                            <input name="column_lst2">SRU_ID SRU_DESC SRU_RESOURCE_TYPE SRU_SRU_UID_PARENT SRU_RESOURCE_LOCKED_YN SRU_RETRIEVAL_LOG_YN SRU_WIN_CODE SRU_FIELD_METADATA_ENABLED_YN SRU_ALLOW_ACCESS_BUTTON_YN</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">ADE_DESC 0</output>
                            <output name="outval2">{SRU_ID SRU_RESOURCE_TYPE} {0 2}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getUniqueConstraints" sequence="2" type="negative">
                <description>This test is for table with no Unique Constraints</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ACE_AUTH_CERTIFICATION_TYPE</input>
                            <input name="key_lst1">ACE_CODE</input>
                            <input name="column_lst1">ACE_DESC ACE_DATE_BEGIN ACE_DATE_END ACE_VERSION</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1"></output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doMoves" sequence="1" type="positive">
                <description>This test is for doMoves proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="13">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="column_lst1">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="inserts1"></input>
                            <input name="moveRows1">1.1</input>
                            <input name="moveVals1">{{FDD_APPLICATION_NAME = 'CareRadius'} {FDD_WORKFLOW_NAME = 'Appeals'} {FDD_FIELD_ID = '0.1.1'}}</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2">ADE_CODE1</input>
                            <input name="column_lst2">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="inserts2"></input>
                            <input name="moveRows2">1.2 1.3</input>
                            <input name="moveVals2">{{FDD_APPLICATION_NAME = 'CareRadius'}} {{FDD_WORKFLOW_NAME = 'Appeals'}}</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{update ADE_APPEAL_DECISION set
 	ADE_CODE = '1.1',
	ADE_USR_UID_UPDATED_BY = -4,
	ADE_LAST_UPDATE_DATE = sysdate
where
	FDD_APPLICATION_NAME = 'CareRadius' and FDD_WORKFLOW_NAME = 'Appeals' and FDD_FIELD_ID = '0.1.1';}</output>
                           <output name="outval2">{update ADE_APPEAL_DECISION set
 	ADE_CODE1 = '1.2',
	ADE_USR_UID_UPDATED_BY = -4,
	ADE_LAST_UPDATE_DATE = sysdate
where
	FDD_APPLICATION_NAME = 'CareRadius';} {update ADE_APPEAL_DECISION set
 	ADE_CODE1 = '1.3',
	ADE_USR_UID_UPDATED_BY = -4,
	ADE_LAST_UPDATE_DATE = sysdate
where
	FDD_WORKFLOW_NAME = 'Appeals';}</output>
                       </outputs>
                    </version>
                </versions>
            </test> 
            <test name="tcl_unit_doInserts" sequence="1" type="positive">
                <description>This test is for doInserts proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="8">
                            <input name="no_of_scenarios">2</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="sdginfo1">true</input>
                            <input name="column_lst1">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="insertData1">{SYSOVR1 {Denial1 Overturned1, Appeal1 Approved1} OVR1 Y1 Y1}</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2">ADE_CODE</input>
                            <input name="sdginfo2">false</input>
                            <input name="column_lst2">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_RECORD_STATUS ADE_RECORD_STATUS_DATE ADE_SYSTEM_YN ADE_RECORD_VERSION ADE_CREATE_DATE ADE_USR_UID_CREATED_BY ADE_LAST_UPDATE_DATE ADE_USR_UID_UPDATED_BY</input>
                            <input name="insertData2">{SYSOVR1 {Denial1 Overturned1, Appeal1 Approved1} OVR1 Y1 Y1}</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{{insert into ADE_APPEAL_DECISION (
	ADE_CODE,
	ADE_DESC,
	ADE_SYSTEM_MEANING,
	ADE_ALLOW_ALL_TYPES_YN,
	ADE_RECORD_STATUS,
	ADE_RECORD_STATUS_DATE,
	ADE_SYSTEM_YN,
	ADE_RECORD_VERSION,
	ADE_CREATE_DATE,
	ADE_USR_UID_CREATED_BY,
	ADE_LAST_UPDATE_DATE,
	ADE_USR_UID_UPDATED_BY,
	ADE_USR_UID_CREATED_BY,
	ADE_CREATE_DATE
) values (
	'SYSOVR1',
	'Denial1 Overturned1, Appeal1 Approved1',
	'OVR1',
	'Y1',
	'Y1',
	-4,
	sysdate
);

}} {} {}</output>
                            <output name="outval2">{{insert into ADE_APPEAL_DECISION (
	ADE_CODE,
	ADE_DESC,
	ADE_SYSTEM_MEANING,
	ADE_ALLOW_ALL_TYPES_YN,
	ADE_RECORD_STATUS,
	ADE_RECORD_STATUS_DATE,
	ADE_SYSTEM_YN,
	ADE_RECORD_VERSION,
	ADE_CREATE_DATE,
	ADE_USR_UID_CREATED_BY,
	ADE_LAST_UPDATE_DATE,
	ADE_USR_UID_UPDATED_BY
) values (
	'SYSOVR1',
	'Denial1 Overturned1, Appeal1 Approved1',
	'OVR1',
	'Y1',
	'Y1'
);

}} {} {}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doInserts" sequence="1" type="negative">
                <description>This test is for doInserts proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="8">
                            <input name="no_of_scenarios">2</input>
                            <!-- <input name="db">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <!-- <input name="db">CRPOOL03020000_520/CRPOOL03020000_520@cic-svr-db09-site</input> -->
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="sdginfo1">false</input>
                            <input name="column_lst1"></input>
                            <input name="insertData1">{SYSOVR1}</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2"></input>
                            <input name="sdginfo2">false</input>
                            <input name="column_lst2"></input>
                            <input name="insertData2"></input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">{{insert into ADE_APPEAL_DECISION (
	ADE_CODE
) values (
	'SYSOVR1'
);

}} {} {}</output>
                            <output name="outval2">{} {} {}</output>
                       </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doInserts_2" sequence="1" type="positive">
                <description>test for doInserts proc</description>
                <versions>
                    <version number="03000000" condition="ge">
                        <inputs count="8">
                            <input name="modelInputParam">Mod$lastShortVersion</input>
                            <input name="no_of_scenarios">3</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="PKVal1">SYSOVR</input>
                            <input name="auditYN1">false</input>
                            <input name="table2">SPV_SECURITY_PRIVILEGE</input>
                            <input name="PKVal2">1</input>
                            <input name="auditYN2">true</input>
                            <input name="table3">SRU_SECURITY_RESOURCE</input>
                            <input name="PKVal3">2</input>
                            <input name="auditYN3">true</input>
                            <input name="FKS3">1</input>
                        </inputs>
                        <outputs count="0">
                       </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_joinSQL" sequence="1" type="positive">
                <description>This test is for joinSQL proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">3</input>
                            <input name="data1">SYSOVR1 {Denial1 Overturned1, Appeal1 Approved1} OVR1 Y1 Y1</input>
                            <input name="joiner1">,</input>
                            <input name="data2">SYSOVR1 {Denial1 Overturned1} OVR1 Y1 Y1</input>
                            <input name="joiner2">,</input>
                            <input name="data3">SYSOVR1</input>
                            <input name="joiner3">,</input>
                        </inputs>
                        <outputs count="3">
                            <output name="outval1">'SYSOVR1','Denial1 Overturned1, Appeal1 Approved1','OVR1','Y1','Y1'</output>
                            <output name="outval2">'SYSOVR1','Denial1 Overturned1','OVR1','Y1','Y1'</output>
                            <output name="outval3">'SYSOVR1'</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_joinSQL" sequence="2" type="negative">
                <description>This test is for joinSQL proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="data1">SYSOVR1 {} OVR1 Y1 Y1</input>
                            <input name="joiner1">,</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">'SYSOVR1','','OVR1','Y1','Y1'</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_quoteSQL" sequence="1" type="positive">
                <description>This test is for quoteSQL proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="no_of_scenarios">3</input>
                            <input name="datum1">SYS</input>
                            <input name="datum2">{Denial1 Overturned1, Appeal1 Approved1}</input>
                            <input name="datum3">SYSOVR1 {Denial1 Overturned1, Appeal1 Approved1} OVR1 Y1 Y1</input>
                        </inputs>
                        <outputs count="3">
                            <output name="outval1">'SYS'</output>
                            <output name="outval2">'{Denial1 Overturned1, Appeal1 Approved1}'</output>
                            <output name="outval3">'SYSOVR1 {Denial1 Overturned1, Appeal1 Approved1} OVR1 Y1 Y1'</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_quoteSQL" sequence="1" type="negative">
                <description>This test is for quoteSQL proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="2">
                            <input name="no_of_scenarios">1</input>
                            <input name="datum1"></input>
                        </inputs>
                        <outputs count="3">
                            <output name="outval1">''</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doMaps" sequence="1" type="positive">
                <description>This test is for doMaps proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="10">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="sdginfo1">true</input>
                            <input name="key_name_lst1">ADE_CODE</input>
                            <input name="column_name_lst1">ADE_DESC ADE_SYSTEM_MEANING ADE_ALLOW_ALL_TYPES_YN ADE_SYSTEM_YN</input>
                            <input name="model_data1"></input>
                            <input name="mapRows1">SYSOVR1</input>
                            <input name="mapVals1">{ADE_DESC = 'Denial Overturned, Appeal Approved'}</input>
                            <input name="mapPKs1">SYSOVR</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">Alter table AAG_ADE_APPEAL_TYPE disable constraint AAG_ADE_FOREIGN_KEY_01;
Alter table AAT_ADE_APPEAL_TYPE disable constraint AAT_ADE_FOREIGN_KEY_01;
Alter table MAP_MEM_APPEAL disable constraint MAP_ADE_FOREIGN_KEY_01;
Alter table MCC_MAXMC_CONFIGURATION disable constraint MCC_ADE_FOREIGN_KEY_01;
Alter table MCC_MAXMC_CONFIGURATION disable constraint MCC_ADE_FOREIGN_KEY_02;
Alter table MCC_MAXMC_CONFIGURATION disable constraint MCC_ADE_FOREIGN_KEY_03;
Alter table MEV_MAP_APPEAL_EVENT disable constraint MEV_ADE_FOREIGN_KEY_01;
Alter table MTI_MAP_TID_INPATIENT_APPEAL disable constraint MTI_ADE_FOREIGN_KEY_01;
Alter table MTS_MAP_TCM_SERVICE_APPEAL disable constraint MTS_ADE_FOREIGN_KEY_01;
Update ADE_APPEAL_DECISION set
    ADE_CODE = 'SYSOVR1',
    ADE_USR_UID_UPDATED_BY = -4,
    ADE_LAST_UPDATE_DATE = sysdate
where
    ADE_DESC and = and 'Denial and Overturned, and Appeal and Approved';
COMMIT;
Update AAG_ADE_APPEAL_TYPE set AAG_ADE_CODE = 'SYSOVR1' where AAG_ADE_CODE = 'SYSOVR';
COMMIT;
Update AAT_ADE_APPEAL_TYPE set AAT_ADE_CODE = 'SYSOVR1' where AAT_ADE_CODE = 'SYSOVR';
COMMIT;
Update MAP_MEM_APPEAL set MAP_ADE_CODE = 'SYSOVR1' where MAP_ADE_CODE = 'SYSOVR';
COMMIT;
Update MCC_MAXMC_CONFIGURATION set MCC_ADE_APPEAL_APPROVED = 'SYSOVR1' where MCC_ADE_APPEAL_APPROVED = 'SYSOVR';
COMMIT;
Update MCC_MAXMC_CONFIGURATION set MCC_ADE_APPEAL_DENIED = 'SYSOVR1' where MCC_ADE_APPEAL_DENIED = 'SYSOVR';
COMMIT;
Update MCC_MAXMC_CONFIGURATION set MCC_ADE_APPEAL_PARTIAL = 'SYSOVR1' where MCC_ADE_APPEAL_PARTIAL = 'SYSOVR';
COMMIT;
Update MEV_MAP_APPEAL_EVENT set MEV_ADE_CODE = 'SYSOVR1' where MEV_ADE_CODE = 'SYSOVR';
COMMIT;
Update MTI_MAP_TID_INPATIENT_APPEAL set MTI_ADE_CODE = 'SYSOVR1' where MTI_ADE_CODE = 'SYSOVR';
COMMIT;
Update MTS_MAP_TCM_SERVICE_APPEAL set MTS_ADE_CODE = 'SYSOVR1' where MTS_ADE_CODE = 'SYSOVR';
COMMIT;
COMMIT;
Alter table AAG_ADE_APPEAL_TYPE enable constraint AAG_ADE_FOREIGN_KEY_01;
Alter table AAT_ADE_APPEAL_TYPE enable constraint AAT_ADE_FOREIGN_KEY_01;
Alter table MAP_MEM_APPEAL enable constraint MAP_ADE_FOREIGN_KEY_01;
Alter table MCC_MAXMC_CONFIGURATION enable constraint MCC_ADE_FOREIGN_KEY_01;
Alter table MCC_MAXMC_CONFIGURATION enable constraint MCC_ADE_FOREIGN_KEY_02;
Alter table MCC_MAXMC_CONFIGURATION enable constraint MCC_ADE_FOREIGN_KEY_03;
Alter table MEV_MAP_APPEAL_EVENT enable constraint MEV_ADE_FOREIGN_KEY_01;
Alter table MTI_MAP_TID_INPATIENT_APPEAL enable constraint MTI_ADE_FOREIGN_KEY_01;
Alter table MTS_MAP_TCM_SERVICE_APPEAL enable constraint MTS_ADE_FOREIGN_KEY_01;
</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doMaps" sequence="1" type="negative">
                <description>This test is for doMaps proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="10">
                            <input name="no_of_scenarios">1</input>
                            <!-- <input name="dbConn">UNIT_CRTRUNK/UNIT_CRTRUNK@cic-svr-db08-orcl</input> -->
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="schemaVersion">03030000</input>
                            <!-- <input name="db">CRPOOL03020000_520/CRPOOL03020000_520@cic-svr-db09-site</input> -->
                            <input name="table1"></input>
                            <input name="sdginfo1">true</input>
                            <input name="key_name_lst1"></input>
                            <input name="column_name_lst1"></input>
                            <input name="model_data1"></input>
                            <input name="mapRows1"></input>
                            <input name="mapVals1"></input>
                            <input name="mapPKs1"></input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">
COMMIT;
COMMIT;

</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doUpdates" sequence="1" type="positive">
                <description>This test is for doInserts proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="sdginfo1">true</input>
                            <input name="update1">SYSOVR {{ADE_SYSTEM_MEANING OVR OVR1}}</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2">ADE_CODE</input>
                            <input name="sdginfo2">false</input>
                            <input name="update2">SYSOVR {{ADE_SYSTEM_MEANING OVR OVR1}}</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{update ADE_APPEAL_DECISION set
	,
	ADE_USR_UID_UPDATED_BY = -4,
	ADE_LAST_UPDATE_DATE = sysdate
where
	ADE_CODE = 'SYSOVR';} {update ADE_APPEAL_DECISION set
	,
	ADE_USR_UID_UPDATED_BY = -4,
	ADE_LAST_UPDATE_DATE = sysdate
where
	ADE_CODE = 'ADE_SYSTEM_MEANING' and  = 'OVR' and  = 'OVR1';}</output>
                            <output name="outval2">{update ADE_APPEAL_DECISION set
	
where
	ADE_CODE = 'SYSOVR';} {update ADE_APPEAL_DECISION set
	
where
	ADE_CODE = 'ADE_SYSTEM_MEANING' and  = 'OVR' and  = 'OVR1';}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doUpdates" sequence="1" type="negative">
                <description>This test is for doUpdates proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="sdginfo1">false</input>
                            <input name="update1">{SYSOVR1}</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2"></input>
                            <input name="sdginfo2">false</input>
                            <input name="update2"></input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{update ADE_APPEAL_DECISION set
	
where
	ADE_CODE = 'SYSOVR1';}</output>
                            <output name="outval2"></output>
                       </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doDeletes" sequence="1" type="positive">
                <description>This test is for doDeletes proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="delete1">SYSOVR</input>
                            <input name="where1">ADE_SYSTEM_YN = 'Y'</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2">ADE_CODE</input>
                            <input name="delete2">SYSOVR</input>
                            <input name="where2">ADE_SYSTEM_YN = 'N'</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{select * from ADE_APPEAL_DECISION where
ADE_CODE = 'SYSOVR';} {Update ADE_APPEAL_DECISION set ADE_SYSTEM_YN = 'N' where
ADE_CODE = 'SYSOVR';}</output>
                            <output name="outval2">{select * from ADE_APPEAL_DECISION where
ADE_CODE = 'SYSOVR';} {delete from ADE_APPEAL_DECISION where
ADE_CODE = 'SYSOVR';}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_doDeletes" sequence="1" type="negative">
                <description>This test is for doDeletes proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_lst1">ADE_CODE</input>
                            <input name="where1"></input>
                            <input name="delete1"></input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_lst2">ADE_CODE</input>
                            <input name="where2"></input>
                            <input name="delete2">SYSOVR</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1"></output>
                            <output name="outval2">{select * from ADE_APPEAL_DECISION where
ADE_CODE = 'SYSOVR';} {delete from ADE_APPEAL_DECISION where
ADE_CODE = 'SYSOVR';}</output>
                       </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_lgetThese" sequence="1" type="positive">
                <description>This test is for lgetThese proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="thelist1">Testing for proc lgetThese</input>
                            <input name="theindices1">0 3</input>
                            <input name="thelist2">Testing for proc lgetThese</input>
                            <input name="theindices2">3 2 1 0</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">Testing lgetThese</output>
                            <output name="outval2">lgetThese proc for Testing</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_lgetThese" sequence="1" type="negative">
                <description>This test is for lgetThese proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="thelist1"></input>
                            <input name="theindices1"></input>
                            <input name="thelist2">Testing for proc lgetThese</input>
                            <input name="theindices2">-1 4</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1"></output>
                            <output name="outval2">{} {}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToAdd" sequence="1" type="positive">
                <description>This test is for keysToAdd proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_name1">ADE_CODE</input>
                            <input name="new_key_lst1">SYSOVR1</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_name2">ADE_CODE</input>
                            <input name="new_key_lst2"></input>
                        </inputs>
                        <outputs count="2">
                            <!-- <output name="outval1">5</output> -->
                            <!-- <output name="outval2"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToUpdate" sequence="1" type="positive">
                <description>This test is for keysToAdd proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_name1">ADE_CODE</input>
                            <input name="new_key_lst1">SYSOVR1</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_name2">ADE_CODE</input>
                            <input name="new_key_lst2"></input>
                        </inputs>
                        <outputs count="2">
                            <!-- <output name="outval1">5</output> -->
                            <!-- <output name="outval2"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToMove" sequence="1" type="positive">
                <description>This test is for keysToMove proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_name1">ADE_CODE</input>
                            <input name="new_key_lst1">SYSOVR1</input>
                            <input name="modvals1">SYSOVR</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_name2">ADE_CODE</input>
                            <input name="new_key_lst2"></input>
                            <input name="modvals2">SYSOVR</input>
                        </inputs>
                        <outputs count="2">
                            <!-- <output name="outval1">5</output> -->
                            <!-- <output name="outval2"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToMap" sequence="1" type="positive">
                <description>This test is for keysToMove proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">2</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_name1">ADE_CODE</input>
                            <input name="new_key_lst1">SYSOVR1</input>
                            <input name="modvals1">SYSOVR</input>
                            <input name="table2">ADE_APPEAL_DECISION</input>
                            <input name="key_name2">ADE_CODE</input>
                            <input name="new_key_lst2"></input>
                            <input name="modvals2">SYSOVR</input>
                        </inputs>
                        <outputs count="2">
                            <!-- <output name="outval1">5</output> -->
                            <!-- <output name="outval2"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToMapCollision" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="table1">ADE_APPEAL_DECISION</input>
                            <input name="key_name1">ADE_CODE</input>
                        </inputs>
                        <outputs count="2">
                            <!-- <output name="outval1">5</output> -->
                            <!-- <output name="outval2"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_keysToMapCollision" sequence="1" type="negative">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="table1"></input>
                            <input name="key_name1">ADE_CODE</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">5</output>
                            <output name="outval2"></output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_outputWithCommits" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="statements1">select * from ADE_APPEAL_DECISION where ADE_CODE = 'SYSOVR';</input>
                            <input name="commitcount1">50</input>
                            <input name="statements2">{select * from ADE_APPEAL_DECISION where ADE_CODE = 'SYSOVR';} {Update ADE_APPEAL_DECISION set ADE_SYSTEM_YN = 'N' where ADE_CODE = 'SYSOVR';}</input>
                            <input name="commitcount2">50</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">select
*
from
ADE_APPEAL_DECISION
where
ADE_CODE
=
'SYSOVR';

COMMIT;

</output>
                            <output name="outval2">select * from ADE_APPEAL_DECISION where ADE_CODE = 'SYSOVR';
Update ADE_APPEAL_DECISION set ADE_SYSTEM_YN = 'N' where ADE_CODE = 'SYSOVR';

COMMIT;

</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_outputWithCommits" sequence="1" type="negative">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="statements1"></input>
                            <input name="commitcount1"></input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1"></output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_nextPage" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">2</input>
                            <input name="pageCount1">0</input>
                            <input name="pageCount2">1</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">\t\t\t\t\tEXL Healthcare System Data Difference Report
\t\t\t\t\tMM/DD/YYYY
\t\t\t\t\tPage 1</output>
                            <output name="outval2">\t\t\t\t\tEXL Healthcare System Data Difference Report
\t\t\t\t\tMM/DD/YYYY
\t\t\t\t\tPage 2</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_DEBUG_SDG_START" sequence="1" type="positive">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="arrayVal1">true</input>
                            <input name="arrayVal2"></input>
                            <input name="fileName">DEBUG_SDG_START_OUT.out</input>
                        </inputs>
                        <outputs count="">
                        </outputs>
                    </version>
                </versions>
            </test>
             <test name="tcl_unit_SDG_PUTT" sequence="1" type="negative">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="fileName">SDG_DEBUG_OUT.out</input>
                        </inputs>
                        <outputs count="">
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_DEBUG_SDG_END" sequence="1" type="negative">
                <description>This test is for keysToMapCollision proc</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="fileName">DEBUG_SDG_END.out</input>
                        </inputs>
                        <outputs count="">
                        </outputs>
                    </version>
                </versions>
            </test>
        </tests>
    </category>
<category name="AutoScript">
        <config>set MODEL_FILES_DIRECTORY Models</config>
        <tests>
            <test name="tcl_unit_AutoScript.version" sequence="1" type="positive">
                <description>This test is to check the version of AutoScript</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_AutoScript.revision" sequence="1" type="positive">
                <description>This test is to check the revision of AutoScript</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_asc_tool" sequence="1" type="positive">
                <description>This test is to check the proc asc_tool</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getArgsAutoScript" sequence="1" type="positive">
                <description>This test is to check the proc getArgsAutoScript</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">2</input>
                            <input name="argv1">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt Y</input>
                            <input name="argc1">3</input>
                            <input name="argv2">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt N</input>
                            <input name="argc2">3</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt Y nomail 0</output>
                            <output name="outval2">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt N nomail 0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getArgsAutoScript" sequence="1" type="negative">
                <description>This test is to check the proc getArgsAutoScript</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="7">
                            <input name="no_of_scenarios">3</input>
                            <input name="argv1">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt</input>
                            <input name="argc1">2</input>
                            <input name="argv2">CRPOOL03020000_783/CRPOOL03020000_783@cic-svr-db09-site AutoConversion.txt N</input>
                            <input name="argc2">2</input>
                            <input name="argv3">CRPOOL03020000_783/CRPOOL03020000_783cic-svr-db09-site AutoConversion.txt Y</input>
                            <input name="argc3">3</input>
                        </inputs>
                        <outputs count="3">
                            <output name="outval1">-1</output>
                            <output name="outval2">-1</output>
                            <output name="outval3">-1</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_getToolsList" sequence="1" type="positive">
                <description>This test is to check the proc getToolsList</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="9">
                            <input name="no_of_scenarios">4</input>
                            <input name="product1">CR</input>
                            <input name="e_file1"></input>
                            <input name="product2">MC</input>
                            <input name="e_file2"></input>
                            <input name="product3">M2</input>
                            <input name="e_file3"></input>
                            <input name="product4">CF</input>
                            <input name="e_file4"></input>
                        </inputs>
                        <outputs count="4">
                            <output name="outval1">dbvalid dbCompare SysDataGen SysDeleteEval sy_load seqfix</output>
                            <output name="outval2">dbCompare SysDataGen SysDeleteEval sy_load seqfix TaskImport </output>
                            <output name="outval3">dbCompare SysDataGen SysDeleteEval sy_load seqfix TaskImport </output>
                            <output name="outval4">dbCompare SysDataGen SysDeleteEval TblspAnalysis seqfix</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <!-- <test name="tcl_unit_pauseOnIndexScript" sequence="1" type="positive"> -->
                <!-- <description>This test is to check the proc pauseOnIndexScript</description> -->
                <!-- <versions> -->
                    <!-- <version number="03020000" condition="ge"> -->
                        <!-- <inputs count="9"> -->
                            <!-- <input name="no_of_scenarios">1</input> -->
                            <!-- <input name="scriptname1">sysDataGen</input> -->
                        <!-- </inputs> -->
                        <!-- <outputs count="4"> -->
                            <!-- <output name="outval1">dbvalid dbCompare SysDataGen SysDeleteEval sy_load seqfix</output> -->

                        <!-- </outputs> -->
                    <!-- </version> -->
                <!-- </versions> -->
            <!-- </test> -->
            <test name="tcl_unit_checkResources" sequence="1" type="positive">
                <description>This test is to check the proc checkResources</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="4">
                            <input name="no_of_scenarios">1</input>
                            <input name="scenario">positive</input>
                            <input name="tcl_tools1">dbvalid dbCompare SysDataGen SysDeleteEval sy_load seqfix</input>
                            <input name="driverfile1">$testDataDir/AutoConversion_RE422.txt</input>

                        </inputs>
                        <outputs count="1">
                            <output name="outval1"></output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_checkResources" sequence="1" type="negative">
                <description>This test is to check the proc checkResources</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="no_of_scenarios">2</input>
                            <input name="scenario">negative</input>
                            <input name="tcl_tools1">dbvalid dbCompare SysDataGen SysDeleteEval sy_load seqfix</input>
                            <input name="driverfile1">$testDataDir/AutoConversion_RE422.txt</input>
                            <input name="tcl_tools2">dbvalid dbCompare SysDataGen SysDeleteEval sy_load seqfix1</input>
                            <input name="driverfile2">$testDataDir/AutoConversion_RE422.txt</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">{FDD03020000.sql is missing.}</output>
                            <output name="outval2">{seqfix1.tcl is missing.} {FDD03020000.sql is missing.}</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_usage_Autoscript" sequence="1" type="positive">
                <description>This test is to check proc usage_Autoscript </description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="3">
                            <input name="no_of_scenarios">1</input>
                            <input name="argv">test</input>
                            <input name="argc">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <!-- KNOWN BUG: hard coded path and schema connection
            <test name="tcl_unit_restartYN" sequence="1" type="positive">
                <description>This test is to check the proc restartYN</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="no_of_scenarios">2</input>
                            <input name="server">cic-svr-db09-site</input>
                            <input name="schemaVersion">03020000</input>
                            <input name="scenario">positive</input>
                            <input name="batty1">asc133_RE-422.bat</input>
                            <input name="silent1">0</input>
                            <input name="batty2">asc133_RE-422.bat</input>
                            <input name="silent2">1</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">0 0</output>
                            <output name="outval2">-1</output>
                        </outputs>
                    </version>
                </versions>
            </test> -->
            <!-- KNOWN BUG: hard coded path and schema connection
            <test name="tcl_unit_restartYN" sequence="1" type="negative">
                <description>This test is to check the proc restartYN</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="no_of_scenarios">1</input>
                            <input name="server">cic-svr-db09-site</input>
                            <input name="schemaVersion">03020000</input>
                            <input name="scenario">negative</input>
                            <input name="batty1">asc133_RE-422.bat</input>
                            <input name="silent1">1</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">0 0</output>
                        </outputs>
                    </version>
                </versions>
            </test> -->
            <!-- KNOWN BUG: never returns
            <test name="tcl_unit_runDropColumns" sequence="1" type="positive">
                <description>This test is to check the proc runDropColumns</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="8">
                            <input name="no_of_scenarios">2</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">03020000</input>
                            <input name="scenario">positive</input>
                            <input name="scripts1">{133 CR03020000_RE-423_1.sql 03.02.00.00 CR Mod3200}</input>
                            <input name="scriptDir1">/testdata</input>
                            <input name="scripts2">{133 CR03020000_RE-423.sql 03.02.00.00 CR Mod3200}</input>
                            <input name="scriptDir2">/testdata</input>
                        </inputs>
                        <outputs count="2">
                            <output name="outval1">TEST</output>
                            <output name="outval2"></output>
                        </outputs>
                    </version>
                </versions>
            </test> -->
            <!-- KNOWN BUG: never returns
            <test name="tcl_unit_runDropColumns" sequence="2" type="negative">
                <description>This test is to check the proc runDropColumns</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="6">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">03020000</input>
                            <input name="scenario">negative</input>
                            <input name="scripts1">{133 CR03020000_RE-423_10.sql 03.02.00.00 CR Mod3200}</input>
                            <input name="scriptDir1">/testdata</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">Could not find [pwd]/testdata/CR03020000_RE-423_10.sql.  Cannot validate success.</output>
                        </outputs>
                    </version>
                </versions>
            </test> -->
            <test name="tcl_unit_codeFailureMessage" sequence="1" type="positive">
                <description>This test is to check the proc codeFailureMessage</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="schemaConnections">targetConnection</input>
                            <input name="targetConnection_server">db09</input>
                            <input name="targetConnection_schemaVersion">$lastVersion</input>
                            <input name="conflict_codes1">{TABLE1 COLUMN1 VALUE1}</input>
                            <input name="silent1">1</input>
                        </inputs>
                        <outputs count="1">
                            <output name="outval1">N</output>
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_conversionFailure" sequence="1" type="positive">
                <description>This test is to check the proc conversionFailure</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="displayDB">test</input>
                            <input name="startVersion">03.00.00.00</input>
                            <input name="targetVersion">03.02.00.00</input>
                            <input name="outDir"></input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_preConversionFailure" sequence="1" type="positive">
                <description>This test is to check the proc preConversionFailure</description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="5">
                            <input name="no_of_scenarios">1</input>
                            <input name="displayDB">test</input>
                            <input name="startVersion">03.00.00.00</input>
                            <input name="targetVersion">03.02.00.00</input>
                            <input name="outDir"></input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_AutoScript.getDescription" sequence="1" type="positive">
                <description>This test is to check the proc AutoScript.getDescription </description>
                <versions>
                    <version number="03020000" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="0">
                            <!-- <output name="retval"></output> -->
                        </outputs>
                    </version>
                </versions>
            </test>
            <test name="tcl_unit_AutoScript.getPLSQLFileVersion" sequence="1" type="positive">
                <description>ensure correct version is returned. </description>
                <versions>
                    <version number="03030600" condition="ge">
                        <inputs count="1">
                            <input name="no_of_scenarios">1</input>
                        </inputs>
                        <outputs count="1">
                            <output name="retval">3.0</output>
                        </outputs>
                    </version>
                </versions>
            </test>
        </tests>
</category>
</suite>